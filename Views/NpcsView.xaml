<!-- NpcsView.xaml -->
<reactiveui:ReactiveUserControl x:Class="NPC_Plugin_Chooser_2.Views.NpcsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:NPC_Plugin_Chooser_2.Views"
             xmlns:vm="clr-namespace:NPC_Plugin_Chooser_2.View_Models"
             xmlns:reactiveui="http://reactiveui.net"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:dd="urn:gong-wpf-dragdrop"
             mc:Ignorable="d"
             x:TypeArguments="vm:VM_NpcSelectionBar"
             d:DataContext="{d:DesignInstance Type=vm:VM_NpcSelectionBar}"
             d:DesignHeight="600" d:DesignWidth="800">

    <UserControl.Resources>
        <local:BooleanToBrushConverter x:Key="BooleanToBrushConverter"/>
        <local:IsNotNullConverter x:Key="IsNotNullConverter"/>
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:EnumDescriptionConverter x:Key="EnumDescConverter"/>

        <ObjectDataProvider x:Key="NpcSearchTypeEnumValues" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters> <x:Type TypeName="vm:NpcSearchType"/> </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
         <ObjectDataProvider x:Key="SelectionStateFilterTypeEnumValues" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
             <ObjectDataProvider.MethodParameters> <x:Type TypeName="vm:SelectionStateFilterType"/> </ObjectDataProvider.MethodParameters>
         </ObjectDataProvider>

        <DataTemplate x:Key="AppearanceModDragAdorner" DataType="{x:Type vm:VM_AppearanceMod}">
            <Border BorderThickness="1" BorderBrush="DimGray" Background="LightGoldenrodYellow"
                    Opacity="0.75" CornerRadius="2" Padding="2"
                    Width="100" Height="100"> 
                <Grid>
                    <Image Source="{Binding ImagePath}" Stretch="Uniform" />
                    <TextBlock Text="{Binding ModName}" VerticalAlignment="Bottom" HorizontalAlignment="Center"
                               Background="#AA000000" Foreground="White" FontSize="9" Padding="2,0"
                               TextTrimming="CharacterEllipsis"/>
                </Grid>
            </Border>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> 
            <RowDefinition Height="*"/>    
            <RowDefinition Height="Auto"/> 
        </Grid.RowDefinitions>

        <!-- Settings Row (Grid.Row="0") -->
        <Border Grid.Row="0" Background="#F0F0F0" BorderBrush="Gray" BorderThickness="0,0,0,1" Padding="5">
            <DockPanel LastChildFill="False">
                 <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" VerticalAlignment="Center" Margin="0,0,15,0">
                     <TextBlock Text="NPC Groups:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                     <ComboBox MinWidth="120" MaxWidth="200" Margin="0,0,5,0" VerticalAlignment="Center" IsEditable="True" ItemsSource="{Binding AvailableNpcGroups}" Text="{Binding SelectedGroupName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Select or type a group name"/>
                     <Button Content="Add Cur" Margin="2,0" Padding="3,1" VerticalAlignment="Center" Command="{Binding AddCurrentNpcToGroupCommand}" ToolTip="Add the currently selected NPC to the specified group"/>
                     <Button Content="Rem Cur" Margin="2,0" Padding="3,1" VerticalAlignment="Center" Command="{Binding RemoveCurrentNpcFromGroupCommand}" ToolTip="Remove the currently selected NPC from the specified group"/>
                     <Button Content="Add Vis" Margin="2,0" Padding="3,1" VerticalAlignment="Center" Command="{Binding AddAllVisibleNpcsToGroupCommand}" ToolTip="Add all NPCs currently visible in the list below to the specified group"/>
                     <Button Content="Rem Vis" Margin="2,0" Padding="3,1" VerticalAlignment="Center" Command="{Binding RemoveAllVisibleNpcsFromGroupCommand}" ToolTip="Remove all NPCs currently visible in the list below from the specified group"/>
                 </StackPanel>
                 <CheckBox DockPanel.Dock="Left" Content="Show Hidden Mods" Margin="15,0,0,0" IsChecked="{Binding ShowHiddenMods, Mode=TwoWay}" VerticalAlignment="Center" ToolTip="Toggle visibility of hidden appearance mods"/>
                 <CheckBox DockPanel.Dock="Left" Content="Show NPC Descriptions" Margin="15,0,0,0" IsChecked="{Binding ShowNpcDescriptions, Mode=TwoWay}" VerticalAlignment="Center" ToolTip="If checked, shows descriptions for selected base game NPCs from online sources." />
            </DockPanel>
        </Border>

        <!-- Main Content Row (Grid.Row="1") -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250" MinWidth="200"/> 
                <ColumnDefinition Width="Auto"/>               
                <ColumnDefinition Width="*" MinWidth="250" x:Name="NpcDisplayColumn" />   
            </Grid.ColumnDefinitions>

            <!-- Left Column: Search + NPC List -->
            <DockPanel Grid.Column="0" LastChildFill="True">
                <Border DockPanel.Dock="Top" BorderThickness="0,0,1,1" BorderBrush="DarkGray" Padding="5">
                    <StackPanel Orientation="Vertical">
                        <!-- Search Term 1 -->
                        <Grid Margin="0,0,0,5">
                           <Grid.ColumnDefinitions><ColumnDefinition Width="Auto"/><ColumnDefinition Width="*"/></Grid.ColumnDefinitions>
                           <ComboBox Grid.Column="0" MinWidth="80" Margin="0,0,5,0" VerticalAlignment="Center" ItemsSource="{Binding Source={StaticResource NpcSearchTypeEnumValues}}" SelectedItem="{Binding SearchType1, Mode=TwoWay}" ToolTip="Select search field 1">
                               <ComboBox.ItemTemplate><DataTemplate><TextBlock Text="{Binding Converter={StaticResource EnumDescConverter}}"/></DataTemplate></ComboBox.ItemTemplate>
                           </ComboBox>
                           <Grid Grid.Column="1">
                               <TextBox VerticalAlignment="Center" Text="{Binding SearchText1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Enter search term 1">
                                    <TextBox.Style><Style TargetType="TextBox"><Setter Property="Visibility" Value="Visible"/><Style.Triggers><DataTrigger Binding="{Binding IsSelectionStateSearch1}" Value="True"><Setter Property="Visibility" Value="Collapsed"/></DataTrigger><DataTrigger Binding="{Binding IsGroupSearch1}" Value="True"><Setter Property="Visibility" Value="Collapsed"/></DataTrigger></Style.Triggers></Style></TextBox.Style>
                               </TextBox>
                               <ComboBox VerticalAlignment="Center" ItemsSource="{Binding Source={StaticResource SelectionStateFilterTypeEnumValues}}" SelectedItem="{Binding SelectedStateFilter1, Mode=TwoWay}" ToolTip="Filter by selection state" Visibility="{Binding IsSelectionStateSearch1, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <ComboBox.ItemTemplate><DataTemplate><TextBlock Text="{Binding Converter={StaticResource EnumDescConverter}}"/></DataTemplate></ComboBox.ItemTemplate>
                               </ComboBox>
                               <ComboBox VerticalAlignment="Center" ItemsSource="{Binding AvailableNpcGroups}" SelectedItem="{Binding SelectedGroupFilter1, Mode=TwoWay}" ToolTip="Select group to filter by" Visibility="{Binding IsGroupSearch1, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                           </Grid>
                        </Grid>
                        <!-- Search Term 2 -->
                        <Grid Margin="0,0,0,5">
                            <Grid.ColumnDefinitions><ColumnDefinition Width="Auto"/><ColumnDefinition Width="*"/></Grid.ColumnDefinitions>
                            <ComboBox Grid.Column="0" MinWidth="80" Margin="0,0,5,0" VerticalAlignment="Center" ItemsSource="{Binding Source={StaticResource NpcSearchTypeEnumValues}}" SelectedItem="{Binding SearchType2, Mode=TwoWay}" ToolTip="Select search field 2">
                                <ComboBox.ItemTemplate><DataTemplate><TextBlock Text="{Binding Converter={StaticResource EnumDescConverter}}"/></DataTemplate></ComboBox.ItemTemplate>
                            </ComboBox>
                            <Grid Grid.Column="1">
                                <TextBox VerticalAlignment="Center" Text="{Binding SearchText2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Enter search term 2">
                                    <TextBox.Style><Style TargetType="TextBox"><Setter Property="Visibility" Value="Visible"/><Style.Triggers><DataTrigger Binding="{Binding IsSelectionStateSearch2}" Value="True"><Setter Property="Visibility" Value="Collapsed"/></DataTrigger><DataTrigger Binding="{Binding IsGroupSearch2}" Value="True"><Setter Property="Visibility" Value="Collapsed"/></DataTrigger></Style.Triggers></Style></TextBox.Style>
                                </TextBox>
                                <ComboBox VerticalAlignment="Center" ItemsSource="{Binding Source={StaticResource SelectionStateFilterTypeEnumValues}}" SelectedItem="{Binding SelectedStateFilter2, Mode=TwoWay}" ToolTip="Filter by selection state" Visibility="{Binding IsSelectionStateSearch2, Converter={StaticResource BooleanToVisibilityConverter}}">
                                     <ComboBox.ItemTemplate><DataTemplate><TextBlock Text="{Binding Converter={StaticResource EnumDescConverter}}"/></DataTemplate></ComboBox.ItemTemplate>
                                </ComboBox>
                                <ComboBox VerticalAlignment="Center" ItemsSource="{Binding AvailableNpcGroups}" SelectedItem="{Binding SelectedGroupFilter2, Mode=TwoWay}" ToolTip="Select group to filter by" Visibility="{Binding IsGroupSearch2, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                           </Grid>
                        </Grid>
                        <!-- Search Term 3 -->
                        <Grid Margin="0,0,0,5">
                             <Grid.ColumnDefinitions><ColumnDefinition Width="Auto"/><ColumnDefinition Width="*"/></Grid.ColumnDefinitions>
                             <ComboBox Grid.Column="0" MinWidth="80" Margin="0,0,5,0" VerticalAlignment="Center" ItemsSource="{Binding Source={StaticResource NpcSearchTypeEnumValues}}" SelectedItem="{Binding SearchType3, Mode=TwoWay}" ToolTip="Select search field 3">
                                <ComboBox.ItemTemplate><DataTemplate><TextBlock Text="{Binding Converter={StaticResource EnumDescConverter}}"/></DataTemplate></ComboBox.ItemTemplate>
                             </ComboBox>
                              <Grid Grid.Column="1">
                                 <TextBox VerticalAlignment="Center" Text="{Binding SearchText3, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Enter search term 3">
                                     <TextBox.Style><Style TargetType="TextBox"><Setter Property="Visibility" Value="Visible"/><Style.Triggers><DataTrigger Binding="{Binding IsSelectionStateSearch3}" Value="True"><Setter Property="Visibility" Value="Collapsed"/></DataTrigger><DataTrigger Binding="{Binding IsGroupSearch3}" Value="True"><Setter Property="Visibility" Value="Collapsed"/></DataTrigger></Style.Triggers></Style></TextBox.Style>
                                 </TextBox>
                                 <ComboBox VerticalAlignment="Center" ItemsSource="{Binding Source={StaticResource SelectionStateFilterTypeEnumValues}}" SelectedItem="{Binding SelectedStateFilter3, Mode=TwoWay}" ToolTip="Filter by selection state" Visibility="{Binding IsSelectionStateSearch3, Converter={StaticResource BooleanToVisibilityConverter}}">
                                      <ComboBox.ItemTemplate><DataTemplate><TextBlock Text="{Binding Converter={StaticResource EnumDescConverter}}"/></DataTemplate></ComboBox.ItemTemplate>
                                 </ComboBox>
                                 <ComboBox VerticalAlignment="Center" ItemsSource="{Binding AvailableNpcGroups}" SelectedItem="{Binding SelectedGroupFilter3, Mode=TwoWay}" ToolTip="Select group to filter by" Visibility="{Binding IsGroupSearch3, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                             </Grid>
                         </Grid>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <RadioButton Content="AND (Match All)" GroupName="SearchLogic" VerticalAlignment="Center" Margin="0,0,10,0" IsChecked="{Binding IsSearchAndLogic, Mode=TwoWay}" ToolTip="Results must match all active search terms"/>
                            <RadioButton Content="OR (Match Any)" GroupName="SearchLogic" VerticalAlignment="Center" ToolTip="Results must match at least one active search term"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
                 <Border BorderThickness="0,0,1,0" BorderBrush="DarkGray">
                    <ListBox x:Name="NpcListBox" ItemsSource="{Binding FilteredNpcs}"
                             SelectedItem="{Binding SelectedNpc, Mode=TwoWay}"
                             ScrollViewer.VerticalScrollBarVisibility="Auto"
                             VerticalContentAlignment="Stretch"
                             SelectionChanged="NpcListBox_OnSelectionChanged">
                         <ListBox.ItemTemplate>
                             <DataTemplate>
                                 <Border>
                                     <Border.ToolTip>
                                         <ToolTip> <StackPanel> <TextBlock Text="{Binding NpcName}" /> <TextBlock Text="{Binding NpcEditorId}" /> <TextBlock Text="{Binding NpcFormKeyString}" /> </StackPanel> </ToolTip>
                                     </Border.ToolTip>
                                     <TextBlock Text="{Binding DisplayName}" />
                                 </Border>
                             </DataTemplate>
                         </ListBox.ItemTemplate>
                    </ListBox>
                </Border>
            </DockPanel>

            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="LightGray" ResizeBehavior="PreviousAndNext"/>

            <ScrollViewer Grid.Column="2" x:Name="ImageDisplayScrollViewer"
                          VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled"
                          HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                          SizeChanged="ImageDisplayScrollViewer_SizeChanged"
                          PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                 <ItemsControl x:Name="AppearanceModsItemsControl" ItemsSource="{Binding CurrentNpcAppearanceMods}" AllowDrop="True"> 
                     <ItemsControl.ItemsPanel>
                         <ItemsPanelTemplate>
                             <WrapPanel Orientation="Horizontal"
                                        Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ScrollViewer}}"/>
                         </ItemsPanelTemplate>
                     </ItemsControl.ItemsPanel>
                     <ItemsControl.ItemTemplate>
                         <DataTemplate DataType="{x:Type vm:VM_AppearanceMod}">
                             <Border BorderThickness="2" Margin="5"
                                     Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                                     BorderBrush="{Binding BorderColor}"
                                     Width="{Binding ImageWidth}"
                                     Height="{Binding ImageHeight}"
                                     dd:DragDrop.IsDragSource="True"
                                     dd:DragDrop.IsDropTarget="True"
                                     dd:DragDrop.DragHandler="{Binding}" 
                                     dd:DragDrop.DropHandler="{Binding}"
                                     dd:DragDrop.DragDropContext="{Binding}" 
                                     AllowDrop="True"
                                     dd:DragDrop.DragAdornerTemplate="{StaticResource AppearanceModDragAdorner}">
                                 <i:Interaction.Triggers>
                                     <i:EventTrigger EventName="MouseLeftButtonUp">
                                         <i:InvokeCommandAction Command="{Binding SelectCommand}" />
                                     </i:EventTrigger>
                                 </i:Interaction.Triggers>
                                 <Grid Background="LightGray">
                                     <Image Source="{Binding ImagePath}" Stretch="Uniform" ToolTip="{Binding ToolTipString}"
                                            PreviewMouseRightButtonDown="Image_PreviewMouseRightButtonDown">
                                         <Image.Style>
                                             <Style TargetType="Image">
                                                 <Setter Property="Opacity" Value="1.0" />
                                                 <Style.Triggers>
                                                     <DataTrigger Binding="{Binding ImagePath}" Value="{x:Null}"> <Setter Property="Opacity" Value="0.5"/> </DataTrigger>
                                                     <DataTrigger Binding="{Binding ImagePath}" Value=""> <Setter Property="Opacity" Value="0.5"/> </DataTrigger>
                                                 </Style.Triggers>
                                             </Style>
                                         </Image.Style>
                                     </Image>
                                     <TextBlock Text="{Binding ModName}" VerticalAlignment="Bottom" HorizontalAlignment="Center"
                                                Background="#AAFFFFFF" FontSize="10" Padding="3,1"
                                                TextTrimming="CharacterEllipsis" ToolTip="{Binding ModName}"/>
                                 </Grid>
                                 <Border.ContextMenu>
                                     <ContextMenu>
                                         <MenuItem Header="Select" Command="{Binding SelectCommand}" />
                                         <MenuItem Header="Hide" Command="{Binding HideCommand}" />
                                         <MenuItem Header="Unhide" Command="{Binding UnhideCommand}" />
                                         <Separator />
                                         <MenuItem Header="Select All From This Mod" Command="{Binding SelectAllFromThisModCommand}" />
                                         <MenuItem Header="Hide All From This Mod" Command="{Binding HideAllFromThisModCommand}" />
                                         <MenuItem Header="Unhide All From This Mod" Command="{Binding UnhideAllFromThisModCommand}" />
                                         <Separator />
                                         <MenuItem Header="Jump to Mod" Command="{Binding JumpToModCommand}" Visibility="{Binding CanJumpToMod, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                         <MenuItem Header="Show Full Image" Command="{Binding ToggleFullScreenCommand}"/>
                                     </ContextMenu>
                                 </Border.ContextMenu>
                             </Border>
                         </DataTemplate>
                     </ItemsControl.ItemTemplate>
                 </ItemsControl>
             </ScrollViewer>

            <TextBlock Grid.Column="2" Text="Select an NPC..." HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" Foreground="Gray" TextWrapping="Wrap" Margin="20">
                 <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedNpc}" Value="{x:Null}"> <Setter Property="Visibility" Value="Visible"/> <Setter Property="Text" Value="Select an NPC from the list on the left to see appearance options."/> </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions> <Condition Binding="{Binding SelectedNpc, Converter={StaticResource IsNotNullConverter}}" Value="True" /> <Condition Binding="{Binding CurrentNpcAppearanceMods.Count}" Value="0" /> </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible" /> <Setter Property="Text" Value="No appearance options found for the selected NPC."/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>

        <!-- Description Panel & Zoom Controls (Grid.Row="2") -->
        <Border Grid.Row="2" BorderBrush="Gray" BorderThickness="0,1,0,0" Padding="5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/> <!-- Description Area -->
                    <ColumnDefinition Width="Auto"/> <!-- Zoom Controls -->
                </Grid.ColumnDefinitions>

                <!-- Description Area (Left) -->
                <Border Grid.Column="0" Background="#FAFAD2" Padding="0" VerticalAlignment="Center"
                        Visibility="{Binding ShowNpcDescriptions, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                 <DataTrigger Binding="{Binding CurrentNpcDescription}" Value="{x:Null}"> <Setter Property="Visibility" Value="Collapsed"/> </DataTrigger>
                                 <DataTrigger Binding="{Binding CurrentNpcDescription}" Value="{x:Static System:String.Empty}"> <Setter Property="Visibility" Value="Collapsed"/> </DataTrigger>
                                 <DataTrigger Binding="{Binding ShowNpcDescriptions}" Value="False"> <Setter Property="Visibility" Value="Collapsed"/> </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                     <Grid MinHeight="25"> <!-- Ensure the description area has some min height -->
                         <ScrollViewer MaxHeight="40" VerticalScrollBarVisibility="Auto">
                             <TextBlock Text="{Binding CurrentNpcDescription}" TextWrapping="Wrap"/>
                         </ScrollViewer>
                         <TextBlock Text="Loading description..." FontStyle="Italic" Foreground="Gray" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                    Visibility="{Binding IsLoadingDescription, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </Grid>
                </Border>
                
                <!-- Zoom Controls (Right) -->
                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                    <Button x:Name="ZoomOutButton" Content="-" Width="25" Height="25" Margin="2,0" ToolTip="Zoom Out (Ctrl+Scroll Wheel)"/>
                    <TextBox x:Name="ZoomPercentageTextBox" Width="60" Height="25" Margin="2,0" TextAlignment="Center" VerticalContentAlignment="Center"
                             Text="{Binding NpcsViewZoomLevel, StringFormat='F2', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             PreviewMouseWheel="ZoomPercentageTextBox_PreviewMouseWheel"
                             ToolTip="Current Zoom Level. Editable. Ctrl+Scroll Wheel in image area or Scroll Wheel here to adjust."/>
                    <TextBlock Text="%" VerticalAlignment="Center" Margin="0,0,5,0"/>
                    <Button x:Name="ZoomInButton" Content="+" Width="25" Height="25" Margin="2,0" ToolTip="Zoom In (Ctrl+Scroll Wheel)"/>
                    <CheckBox x:Name="LockZoomCheckBox" Content="Lock Zoom" Margin="10,0,0,0" VerticalAlignment="Center" ToolTip="Lock the current zoom level. If unchecked, zoom adjusts to fit images."/>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</reactiveui:ReactiveUserControl>