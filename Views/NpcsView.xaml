<!-- NpcsView.xaml -->
<reactiveui:ReactiveUserControl x:Class="NPC_Plugin_Chooser_2.Views.NpcsView"
             x:Name="NpcsViewRoot"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:NPC_Plugin_Chooser_2.Views"
             xmlns:vm="clr-namespace:NPC_Plugin_Chooser_2.View_Models"
             xmlns:reactiveui="http://reactiveui.net"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:dd="urn:gong-wpf-dragdrop"
             xmlns:models="clr-namespace:NPC_Plugin_Chooser_2.Models"
             mc:Ignorable="d"
             x:TypeArguments="vm:VM_NpcSelectionBar"
             d:DataContext="{d:DesignInstance Type=vm:VM_NpcSelectionBar}"
             d:DesignHeight="600" d:DesignWidth="800">

    <UserControl.Resources>
        <local:BooleanToBrushConverter x:Key="BooleanToBrushConverter"/>
        <local:IsNotNullConverter x:Key="IsNotNullConverter"/>
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:EnumDescriptionConverter x:Key="EnumDescConverter"/>
        <local:PercentageSizingConverter x:Key="PercentageSizingConverter"/>
        <local:LineOffsetConverter x:Key="LineOffsetConverter"/>
        <local:ModKeyToStringConverter x:Key="ModKeyToStringConverter"/>
        <local:AreModKeysEqualMultiConverter x:Key="AreModKeysEqualMultiConverter"/>
        <local:TupleConverter x:Key="TupleConverter"/>
        <local:OutfitOverrideStateConverter x:Key="OutfitOverrideStateConverter"/>
        <ObjectDataProvider x:Key="OutfitOverrideEnumValues" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:OutfitOverride"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="NpcSearchTypeEnumValues" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters> <x:Type TypeName="vm:NpcSearchType"/> </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
         <ObjectDataProvider x:Key="SelectionStateFilterTypeEnumValues" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
             <ObjectDataProvider.MethodParameters> <x:Type TypeName="vm:SelectionStateFilterType"/> </ObjectDataProvider.MethodParameters>
         </ObjectDataProvider>
        <ObjectDataProvider x:Key="ShareStatusFilterTypeEnumValues" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="vm:ShareStatusFilterType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <DataTemplate x:Key="AppearanceModDragAdorner" DataType="{x:Type vm:VM_NpcsMenuMugshot}">
            <Border BorderThickness="1" BorderBrush="DimGray" Background="LightGoldenrodYellow"
                    Opacity="0.75" CornerRadius="2" Padding="2"
                    Width="100" Height="100">
                <Grid>
                    <Image Source="{Binding MugshotSource}" Stretch="UniformToFill" />
                    <TextBlock Text="{Binding ModName}" VerticalAlignment="Bottom" HorizontalAlignment="Center"
                               Background="{DynamicResource MugshotCaptionBackground}" 
                               Foreground="{DynamicResource MugshotCaptionForeground}" 
                               FontSize="10" Padding="3,1"
                               TextTrimming="CharacterEllipsis" ToolTip="{Binding ModName}"/>
                </Grid>
            </Border>
        </DataTemplate>

        <!-- DataContext Proxy Element -->
        <!-- Bind its DataContext to the DataContext of the UserControl itself -->
        <FrameworkElement x:Key="DataContextProxy" Visibility="Collapsed"/>

        <!-- Define the ContextMenu as a resource, using the Proxy -->
        <ContextMenu x:Key="HideUnhideContextMenuResource">
            <MenuItem Header="Hide all selected"
                      Command="{Binding Path=DataContext.HideAllSelectedCommand, Source={StaticResource DataContextProxy}}" />
            <MenuItem Header="Hide all but selected"
                      Command="{Binding Path=DataContext.HideAllButSelectedCommand, Source={StaticResource DataContextProxy}}" />
            <Separator />
            <MenuItem Header="Unhide all selected"
                      Command="{Binding Path=DataContext.UnhideAllSelectedCommand, Source={StaticResource DataContextProxy}}" />
            <MenuItem Header="Unhide all but selected"
                      Command="{Binding Path=DataContext.UnhideAllButSelectedCommand, Source={StaticResource DataContextProxy}}" />
        </ContextMenu>
    
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Settings Row (Grid.Row="0") -->
        <Border Grid.Row="0" BorderBrush="Gray" BorderThickness="0,0,0,1" Padding="5">
            <WrapPanel Orientation="Horizontal" VerticalAlignment="Center">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0,2,15,2">
                    <TextBlock Text="NPC Groups:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                    <ComboBox MinWidth="120" MaxWidth="200" Margin="0,0,5,0" VerticalAlignment="Center" 
                              IsEditable="True" 
                              ItemsSource="{Binding AvailableNpcGroups}" 
                              Text="{Binding SelectedGroupName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                              ToolTip="Select or type a group name"/>
                    <Button x:Name="AddCurrentNpcButton" Content="Add Cur" Margin="2,0" Padding="3,1" VerticalAlignment="Center" Command="{Binding AddCurrentNpcToGroupCommand}" ToolTip="Add the currently selected NPC to the specified group"/>
                    <Button x:Name="RemoveCurrentNpcButton" Content="Rem Cur" Margin="2,0" Padding="3,1" VerticalAlignment="Center" Command="{Binding RemoveCurrentNpcFromGroupCommand}" ToolTip="Remove the currently selected NPC from the specified group"/>
                    <Button x:Name="AddVisibleNpcsButton" Content="Add Vis" Margin="2,0" Padding="3,1" VerticalAlignment="Center" Command="{Binding AddAllVisibleNpcsToGroupCommand}" ToolTip="Add all NPCs currently visible in the list below to the specified group"/>
                    <Button x:Name="RemoveVisibleNpcsButton" Content="Rem Vis" Margin="2,0" Padding="3,1" VerticalAlignment="Center" Command="{Binding RemoveAllVisibleNpcsFromGroupCommand}" ToolTip="Remove all NPCs currently visible in the list below from the specified group"/>
                </StackPanel>

                <CheckBox Content="Show Single-Option NPCs" Margin="10,2,5,2" IsChecked="{Binding ShowSingleOptionNpcs, Mode=TwoWay}" VerticalAlignment="Center" ToolTip="If unchecked, hides NPCs that only have one available appearance."/>
                <CheckBox Content="Show Unloaded NPCs" Margin="5,2,5,2" IsChecked="{Binding ShowUnloadedNpcs, Mode=TwoWay}" VerticalAlignment="Center" ToolTip="If unchecked, hides NPCs that are not part of your current load order (e.g., from mugshots or inactive mods)."/>
                <CheckBox Content="Show Hidden Mods" Margin="5,2" IsChecked="{Binding ShowHiddenMods, Mode=TwoWay}" VerticalAlignment="Center" ToolTip="Toggle visibility of hidden appearance mods"/>
                <CheckBox Content="Show NPC Descriptions" Margin="5,2,15,2" IsChecked="{Binding ShowNpcDescriptions, Mode=TwoWay}" VerticalAlignment="Center" ToolTip="If checked, shows descriptions for selected base game NPCs from online sources."/>
                <Button Content="Favs" Margin="0,2,5,2" Padding="5,2" VerticalAlignment="Center" Command="{Binding ShowFavoritesCommand}" ToolTip="Add an appearance from your list of favorite faces."/>

                <Button Content="Get Choices from Load Order" Margin="0,2,5,2" Padding="5,2" VerticalAlignment="Center"
                        Command="{Binding ImportChoicesFromLoadOrderCommand}" ToolTip="Automatically select appearance mods for NPCs based on your current load order and loose file overrides."/>
                <Button Content="Export My Choices" Margin="0,2,5,2" Padding="5,2" VerticalAlignment="Center"
                         Command="{Binding ExportChoicesCommand}" ToolTip="Export the current list of selected appearance mods for each NPC to a .json file."/>
                <Button Content="Import My Choices" Margin="0,2,5,2" Padding="5,2" VerticalAlignment="Center"
                         Command="{Binding ImportChoicesCommand}" ToolTip="Import a list of NPC appearance selections from a .json file, overwriting current choices."/>
                <Button Content="Clear My Choices" Margin="0,2,15,2" Padding="5,2" VerticalAlignment="Center"
                        Command="{Binding ClearChoicesCommand}" ToolTip="Clear all selections you have made."/>
                
                <Button Content="Compare Selected" Margin="0,2,5,2" Padding="5,2"
                        Command="{Binding CompareSelectedCommand}"
                        ToolTip="Compare all checked mugshots in a full-screen view (Requires 2+ selected)."/>
                <Button Content="Hide/Unhide" Margin="0,2,5,2" Padding="5,2"
                        ContextMenu="{StaticResource HideUnhideContextMenuResource}"
                        Click="HideUnhideButton_Click"
                        IsEnabled="{Binding CanOpenHideUnhideMenu}"
                        ToolTip="Hide or unhide mugshots. Right-click or click for options (enabled if at least one mugshot is checked)."/>
                <Button Content="Deselect all" Margin="0,2,0,2" Padding="5,2"
                        Command="{Binding DeselectAllCommand}"
                        ToolTip="Uncheck all mugshots for the current NPC (Requires 1+ selected)."/>
            </WrapPanel>
        </Border>

        <!-- Main Content Row (Grid.Row="1") -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250" MinWidth="200"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*" MinWidth="250" x:Name="NpcDisplayColumn" />
            </Grid.ColumnDefinitions>

            <!-- Left Column: Search + NPC List -->
            <DockPanel Grid.Column="0" LastChildFill="True">
                <Border DockPanel.Dock="Top" BorderThickness="0,0,1,1" BorderBrush="DarkGray" Padding="5">
                    <StackPanel Orientation="Vertical">
                        <!-- Search Term 1 -->
                        <Grid Margin="0,0,0,5">
                           <Grid.ColumnDefinitions><ColumnDefinition Width="Auto"/><ColumnDefinition Width="*"/></Grid.ColumnDefinitions>
                           <ComboBox Grid.Column="0" MinWidth="80" Margin="0,0,5,0" VerticalAlignment="Center" ItemsSource="{Binding Source={StaticResource NpcSearchTypeEnumValues}}" SelectedItem="{Binding SearchType1, Mode=TwoWay}" ToolTip="Select search field 1">
                               <ComboBox.ItemTemplate><DataTemplate><TextBlock Text="{Binding Converter={StaticResource EnumDescConverter}}"/></DataTemplate></ComboBox.ItemTemplate>
                           </ComboBox>
                           <Grid Grid.Column="1">
                               <TextBox VerticalAlignment="Center" Text="{Binding SearchText1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Enter search term 1">
                                    <TextBox.Style>
                                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSelectionStateSearch1}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger><DataTrigger Binding="{Binding IsGroupSearch1}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsShareStatusSearch1}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                               </TextBox>
                               <ComboBox VerticalAlignment="Center" ItemsSource="{Binding Source={StaticResource SelectionStateFilterTypeEnumValues}}" SelectedItem="{Binding SelectedStateFilter1, Mode=TwoWay}" ToolTip="Filter by selection state" Visibility="{Binding IsSelectionStateSearch1, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <ComboBox.ItemTemplate><DataTemplate><TextBlock Text="{Binding Converter={StaticResource EnumDescConverter}}"/></DataTemplate></ComboBox.ItemTemplate>
                               </ComboBox>
                               <ComboBox VerticalAlignment="Center" ItemsSource="{Binding Source={StaticResource ShareStatusFilterTypeEnumValues}}" SelectedItem="{Binding SelectedShareStatusFilter1, Mode=TwoWay}" ToolTip="Filter by guest status" Visibility="{Binding IsShareStatusSearch1, Converter={StaticResource BooleanToVisibilityConverter}}">
                                   <ComboBox.ItemTemplate><DataTemplate><TextBlock Text="{Binding Converter={StaticResource EnumDescConverter}}"/></DataTemplate></ComboBox.ItemTemplate>
                               </ComboBox>
                               <ComboBox VerticalAlignment="Center" ItemsSource="{Binding AvailableNpcGroups}" SelectedItem="{Binding SelectedGroupFilter1, Mode=TwoWay}" ToolTip="Select group to filter by" Visibility="{Binding IsGroupSearch1, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                           </Grid>
                        </Grid>
                        <!-- Search Term 2 -->
                        <Grid Margin="0,0,0,5">
                            <Grid.ColumnDefinitions><ColumnDefinition Width="Auto"/><ColumnDefinition Width="*"/></Grid.ColumnDefinitions>
                            <ComboBox Grid.Column="0" MinWidth="80" Margin="0,0,5,0" VerticalAlignment="Center" ItemsSource="{Binding Source={StaticResource NpcSearchTypeEnumValues}}" SelectedItem="{Binding SearchType2, Mode=TwoWay}" ToolTip="Select search field 2">
                                <ComboBox.ItemTemplate><DataTemplate><TextBlock Text="{Binding Converter={StaticResource EnumDescConverter}}"/></DataTemplate></ComboBox.ItemTemplate>
                            </ComboBox>
                            <Grid Grid.Column="1">
                                <TextBox VerticalAlignment="Center" Text="{Binding SearchText2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Enter search term 2">
                                    <TextBox.Style>
                                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSelectionStateSearch2}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsGroupSearch2}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsShareStatusSearch2}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <ComboBox VerticalAlignment="Center" ItemsSource="{Binding Source={StaticResource SelectionStateFilterTypeEnumValues}}" SelectedItem="{Binding SelectedStateFilter2, Mode=TwoWay}" ToolTip="Filter by selection state" Visibility="{Binding IsSelectionStateSearch2, Converter={StaticResource BooleanToVisibilityConverter}}">
                                     <ComboBox.ItemTemplate><DataTemplate><TextBlock Text="{Binding Converter={StaticResource EnumDescConverter}}"/></DataTemplate></ComboBox.ItemTemplate>
                                </ComboBox>
                                <ComboBox VerticalAlignment="Center" ItemsSource="{Binding Source={StaticResource ShareStatusFilterTypeEnumValues}}" SelectedItem="{Binding SelectedShareStatusFilter2, Mode=TwoWay}" ToolTip="Filter by guest status" Visibility="{Binding IsShareStatusSearch2, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <ComboBox.ItemTemplate><DataTemplate><TextBlock Text="{Binding Converter={StaticResource EnumDescConverter}}"/></DataTemplate></ComboBox.ItemTemplate>
                                </ComboBox>
                                <ComboBox VerticalAlignment="Center" ItemsSource="{Binding AvailableNpcGroups}" SelectedItem="{Binding SelectedGroupFilter2, Mode=TwoWay}" ToolTip="Select group to filter by" Visibility="{Binding IsGroupSearch2, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                           </Grid>
                        </Grid>
                        <!-- Search Term 3 -->
                        <Grid Margin="0,0,0,5">
                             <Grid.ColumnDefinitions><ColumnDefinition Width="Auto"/><ColumnDefinition Width="*"/></Grid.ColumnDefinitions>
                             <ComboBox Grid.Column="0" MinWidth="80" Margin="0,0,5,0" VerticalAlignment="Center" ItemsSource="{Binding Source={StaticResource NpcSearchTypeEnumValues}}" SelectedItem="{Binding SearchType3, Mode=TwoWay}" ToolTip="Select search field 3">
                                <ComboBox.ItemTemplate><DataTemplate><TextBlock Text="{Binding Converter={StaticResource EnumDescConverter}}"/></DataTemplate></ComboBox.ItemTemplate>
                             </ComboBox>
                              <Grid Grid.Column="1">
                                 <TextBox VerticalAlignment="Center" Text="{Binding SearchText3, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ToolTip="Enter search term 3">
                                     <TextBox.Style>
                                         <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                             <Setter Property="Visibility" Value="Visible"/>
                                             <Style.Triggers>
                                                 <DataTrigger Binding="{Binding IsSelectionStateSearch3}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                 </DataTrigger>
                                                 <DataTrigger Binding="{Binding IsGroupSearch3}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                 <DataTrigger Binding="{Binding IsShareStatusSearch3}" Value="True">
                                                     <Setter Property="Visibility" Value="Collapsed"/>
                                                 </DataTrigger>
                                             </Style.Triggers>
                                         </Style>
                                     </TextBox.Style>
                                 </TextBox>
                                 <ComboBox VerticalAlignment="Center" ItemsSource="{Binding Source={StaticResource SelectionStateFilterTypeEnumValues}}" SelectedItem="{Binding SelectedStateFilter3, Mode=TwoWay}" ToolTip="Filter by selection state" Visibility="{Binding IsSelectionStateSearch3, Converter={StaticResource BooleanToVisibilityConverter}}">
                                      <ComboBox.ItemTemplate><DataTemplate><TextBlock Text="{Binding Converter={StaticResource EnumDescConverter}}"/></DataTemplate></ComboBox.ItemTemplate>
                                 </ComboBox>
                                  <ComboBox VerticalAlignment="Center" ItemsSource="{Binding Source={StaticResource ShareStatusFilterTypeEnumValues}}" SelectedItem="{Binding SelectedShareStatusFilter3, Mode=TwoWay}" ToolTip="Filter by guest status" Visibility="{Binding IsShareStatusSearch3, Converter={StaticResource BooleanToVisibilityConverter}}">
                                      <ComboBox.ItemTemplate><DataTemplate><TextBlock Text="{Binding Converter={StaticResource EnumDescConverter}}"/></DataTemplate></ComboBox.ItemTemplate>
                                  </ComboBox>
                                 <ComboBox VerticalAlignment="Center" ItemsSource="{Binding AvailableNpcGroups}" SelectedItem="{Binding SelectedGroupFilter3, Mode=TwoWay}" ToolTip="Select group to filter by" Visibility="{Binding IsGroupSearch3, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                             </Grid>
                         </Grid>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <RadioButton Content="AND (Match All)" GroupName="SearchLogic" VerticalAlignment="Center" Margin="0,0,10,0" IsChecked="{Binding IsSearchAndLogic, Mode=TwoWay}" ToolTip="Results must match all active search terms"/>
                            <RadioButton Content="OR (Match Any)" GroupName="SearchLogic" VerticalAlignment="Center" ToolTip="Results must match at least one active search term"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
                 <Border BorderThickness="0,0,1,0" BorderBrush="DarkGray">
                    <ListBox x:Name="NpcListBox" ItemsSource="{Binding FilteredNpcs}"
                             SelectedItem="{Binding SelectedNpc, Mode=TwoWay}"
                             ScrollViewer.VerticalScrollBarVisibility="Auto"
                             VerticalContentAlignment="Stretch"
                             SelectionChanged="NpcListBox_OnSelectionChanged">
                         <ListBox.ItemTemplate>
                             <DataTemplate>
                                 <Border>
                                     <Border.ToolTip>
                                         <ToolTip>
                                              <StackPanel>
                                                   <TextBlock Text="{Binding NpcName}" /> 
                                                   <TextBlock Text="{Binding NpcEditorId}" /> 
                                                   <TextBlock Text="{Binding NpcFormKeyString}" />
                                                   <TextBlock Text="{Binding NpcGroupsDisplay}" />
                                              </StackPanel>
                                         </ToolTip>
                                     </Border.ToolTip>
                                     <Border.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="Include Outfits"
                                                      ItemsSource="{Binding Source={StaticResource OutfitOverrideEnumValues}}">
                                                <MenuItem.ItemContainerStyle>
                                                    <Style TargetType="MenuItem">
                                                        <Setter Property="Header" Value="{Binding Converter={StaticResource EnumDescConverter}}"/>
                                                        <Setter Property="IsCheckable" Value="True"/>
        
                                                        <Setter Property="Command" Value="{Binding Path=DataContext.SetNpcOutfitOverrideCommand, Source={StaticResource DataContextProxy}}"/>

                                                        <Setter Property="CommandParameter">
                                                            <Setter.Value>
                                                                <MultiBinding Converter="{StaticResource TupleConverter}">
                                                                    <Binding Path="."/>
                                                                    <Binding Path="PlacementTarget.DataContext" RelativeSource="{RelativeSource AncestorType=ContextMenu}" />
                                                                </MultiBinding>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="IsChecked">
                                                            <Setter.Value>
                                                                <MultiBinding Converter="{StaticResource OutfitOverrideStateConverter}" Mode="OneWay">
                                                                    <Binding Path="." />
                                                                    <Binding Path="PlacementTarget.DataContext.NpcFormKey" 
                                                                             RelativeSource="{RelativeSource AncestorType=ContextMenu}"
                                                                             Mode="OneWay"/>
                    
                                                                    <Binding Path="DataContext" Source="{StaticResource DataContextProxy}" />

                                                                </MultiBinding>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </MenuItem.ItemContainerStyle>
                                            </MenuItem>
                                            <Separator/>
                                            <MenuItem Header="Add Face from Favorites"
                                                      Command="{Binding Path=DataContext.AddFavoriteFaceToNpcCommand, Source={StaticResource DataContextProxy}}"
                                                      CommandParameter="{Binding}"/>
                                        </ContextMenu>
                                    </Border.ContextMenu>
                                     <TextBlock Text="{Binding DisplayName}" />
                                 </Border>
                             </DataTemplate>
                         </ListBox.ItemTemplate>
                    </ListBox>
                </Border>
            </DockPanel>

            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="LightGray" ResizeBehavior="PreviousAndNext"/>

            <ScrollViewer Grid.Column="2" x:Name="ImageDisplayScrollViewer"
                          VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled"
                          HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                          SizeChanged="ImageDisplayScrollViewer_SizeChanged"
                          PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">
                 <ItemsControl x:Name="AppearanceModsItemsControl" ItemsSource="{Binding CurrentNpcAppearanceMods}" AllowDrop="True">
                     <ItemsControl.ItemsPanel>
                         <ItemsPanelTemplate>
                             <WrapPanel Orientation="Horizontal"
                                        Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ScrollViewer}}"/>
                         </ItemsPanelTemplate>
                     </ItemsControl.ItemsPanel>
                     <ItemsControl.ItemTemplate>
                         <DataTemplate DataType="{x:Type vm:VM_NpcsMenuMugshot}">
                             <Border 
                                 BorderThickness="{Binding MugshotBorderThickness,
                                      RelativeSource={RelativeSource AncestorType={x:Type local:NpcsView}}}"
                                 Margin="{Binding MugshotMargin,
                                     RelativeSource={RelativeSource AncestorType={x:Type local:NpcsView}}}"
                                 Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
                                 BorderBrush="{Binding BorderColor}"
                                 Width="{Binding ImageWidth}"
                                 Height="{Binding ImageHeight}"
                                 dd:DragDrop.IsDragSource="True"
                                 dd:DragDrop.IsDropTarget="True"
                                 dd:DragDrop.DragHandler="{Binding}"
                                 dd:DragDrop.DropHandler="{Binding}"
                                 dd:DragDrop.DragDropContext="{Binding}"
                                 AllowDrop="True"
                                 dd:DragDrop.DragAdornerTemplate="{StaticResource AppearanceModDragAdorner}">
                                 <i:Interaction.Triggers>
                                     <i:EventTrigger EventName="MouseLeftButtonUp">
                                         <i:InvokeCommandAction Command="{Binding SelectCommand}" />
                                     </i:EventTrigger>
                                 </i:Interaction.Triggers>
                                 <Grid Background="LightGray"> <!-- This Grid is the reference for CheckBox width -->
                                     <Image Source="{Binding MugshotSource}" Stretch="UniformToFill" ToolTip="{Binding ToolTipString}"
                                            PreviewMouseRightButtonDown="Image_PreviewMouseRightButtonDown">
                                         <Image.Style>
                                             <Style TargetType="Image">
                                                 <Setter Property="Opacity" Value="1.0" />
                                                 <Style.Triggers>
                                                     <DataTrigger Binding="{Binding MugshotSource}" Value="{x:Null}"> <Setter Property="Opacity" Value="0.5"/> </DataTrigger>
                                                     <DataTrigger Binding="{Binding MugshotSource}" Value=""> <Setter Property="Opacity" Value="0.5"/> </DataTrigger>
                                                 </Style.Triggers>
                                             </Style>
                                         </Image.Style>
                                     </Image>
                                     <TextBlock Text="{Binding ModName}" VerticalAlignment="Bottom" HorizontalAlignment="Center"
                                                Background="{DynamicResource MugshotCaptionBackground}" 
                                                Foreground="{DynamicResource MugshotCaptionForeground}" 
                                                FontSize="10" Padding="3,1"
                                                TextTrimming="CharacterEllipsis" ToolTip="{Binding ModName}"/>
                                     
                                     <!-- Outer Container for Issue Notification Indicator (Top-Left) -->
                                     <Grid x:Name="IssueIndicatorContainerGrid"
                                           HorizontalAlignment="Left" 
                                           VerticalAlignment="Top"
                                           Width="{Binding ElementName=CompareCheckBox, Path=ActualWidth}"  
                                           Height="{Binding ElementName=CompareCheckBox, Path=ActualHeight}" 
                                           Visibility="{Binding HasIssueNotification, Converter={StaticResource BooleanToVisibilityConverter}}"
                                           ToolTip="{Binding IssueNotificationText}"
                                           Margin="0,0,0,0"> 
                                         
                                         <!-- Inner Viewbox to scale the "!" and center it -->
                                         <Viewbox Stretch="Uniform" 
                                                  HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center">
                                             <TextBlock Text="!"
                                                        FontWeight="Bold"
                                                        Foreground="Red"/>
                                         </Viewbox>
                                     </Grid>
                                     
                                     <!-- Outer Container for No Data Notification Indicator (Bottom-Left) -->
                                     <Grid x:Name="NoDataIndicatorContainerGrid"
                                           HorizontalAlignment="Left" 
                                           VerticalAlignment="Bottom"
                                           Width="{Binding ElementName=CompareCheckBox, Path=ActualWidth}"  
                                           Height="{Binding ElementName=CompareCheckBox, Path=ActualHeight}" 
                                           Visibility="{Binding HasNoData, Converter={StaticResource BooleanToVisibilityConverter}}"
                                           ToolTip="{Binding NoDataNotificationText}"
                                           Margin="0,0,0,0"> 
                                         
                                         <!-- Inner Viewbox to scale the "!" and center it -->
                                         <Viewbox Stretch="Uniform" 
                                                  HorizontalAlignment="Center" 
                                                  VerticalAlignment="Center">
                                             <Image Source="/NPC Plugin Chooser 2;component/Resources/No Associated Data.png" />
                                         </Viewbox>
                                     </Grid>
                                     
                                     <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0 0 0 10"
                                           Visibility="{Binding IsAmbiguousSource, Converter={StaticResource BooleanToVisibilityConverter}}"
                                           ToolTip="This NPC is defined in multiple source plugins. Right-click to select the correct source."
                                           Width="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ActualWidth, Converter={StaticResource PercentageSizingConverter}, ConverterParameter='20'}"
                                           Height="{Binding RelativeSource={RelativeSource Self}, Path=Width}">

                                         <Viewbox Stretch="Uniform">
                                             <Image Source="/NPC Plugin Chooser 2;component/Resources/Multiple Plugins for NPC.png" />
                                         </Viewbox>
                                     </Grid>
                                     
                                     <Grid HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0 0 0 10"
                                           Visibility="{Binding IsGuestAppearance, Converter={StaticResource BooleanToVisibilityConverter}}"
                                           Width="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ActualWidth, Converter={StaticResource PercentageSizingConverter}, ConverterParameter='20'}"
                                           Height="{Binding RelativeSource={RelativeSource Self}, Path=Width}">

                                         <Grid.ToolTip>
                                             <ToolTip>
                                                 <ToolTip.Content>
                                                     <TextBlock>
                                                         <TextBlock.Text>
                                                             <MultiBinding StringFormat="Select this mugshot to apply this version of {0}'s appearance to {1}.">
                                                                 <Binding Path="OriginalTargetName"/>
                                                                 <Binding Path="TargetDisplayName"/>
                                                             </MultiBinding>
                                                         </TextBlock.Text>
                                                     </TextBlock>
                                                 </ToolTip.Content>
                                             </ToolTip>
                                         </Grid.ToolTip>

                                         <Viewbox Stretch="Uniform">
                                             <Image Source="/NPC Plugin Chooser 2;component/Resources/Guest Plugin.png"/>
                                         </Viewbox>
                                     </Grid>
                                     
                                     <Grid HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0 0 0 10"
                                           ToolTip="{Binding ShareSourceTooltipText}"
                                           Width="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ActualWidth, Converter={StaticResource PercentageSizingConverter}, ConverterParameter='20'}"
                                           Height="{Binding RelativeSource={RelativeSource Self}, Path=Width}">
                                         <Grid.Style>
                                             <Style TargetType="Grid">
                                                 <Setter Property="Visibility" Value="Collapsed" />
                                                 <Style.Triggers>
                                                     <MultiDataTrigger>
                                                         <MultiDataTrigger.Conditions>
                                                             <Condition Binding="{Binding IsShareSource}" Value="True" />
                                                             <Condition Binding="{Binding IsGuestAppearance}" Value="False" />
                                                         </MultiDataTrigger.Conditions>
                                                         <Setter Property="Visibility" Value="Visible" />
                                                     </MultiDataTrigger>
                                                 </Style.Triggers>
                                             </Style>
                                         </Grid.Style>

                                         <Viewbox Stretch="Uniform">
                                             <Image>
                                                 <Image.Style>
                                                     <Style TargetType="Image">
                                                         <Setter Property="Source" Value="/NPC Plugin Chooser 2;component/Resources/SourcePlugin.png"/>
                                                         <Style.Triggers>
                                                             <DataTrigger Binding="{Binding IsSelectedByGuest}" Value="True">
                                                                 <Setter Property="Source" Value="/NPC Plugin Chooser 2;component/Resources/SelectedSourcePlugin.png"/>
                                                             </DataTrigger>
                                                         </Style.Triggers>
                                                     </Style>
                                                 </Image.Style>
                                             </Image>
                                         </Viewbox>
                                     </Grid>

                                     <CheckBox x:Name="CompareCheckBox" 
                                               IsChecked="{Binding IsCheckedForCompare, Mode=TwoWay}"
                                               VerticalAlignment="Top" HorizontalAlignment="Right"
                                               Margin="0" Padding="0"
                                               Width="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=ActualWidth, Converter={StaticResource PercentageSizingConverter}, ConverterParameter='10'}"
                                               Height="{Binding RelativeSource={RelativeSource Self}, Path=Width}"
                                               Background="Transparent"
                                               BorderBrush="Transparent"
                                               Foreground="White"
                                               BorderThickness="0"
                                               ToolTip="Select this mugshot for comparison or hiding others.">
                                         <CheckBox.Style>
                                             <Style TargetType="CheckBox">
                                                 <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                                 <Setter Property="Template">
                                                     <Setter.Value>
                                                         <ControlTemplate TargetType="CheckBox">
                                                             <Grid Width="{TemplateBinding Width}"
                                                                   Height="{TemplateBinding Height}"
                                                                   Background="{TemplateBinding Background}"
                                                                   SnapsToDevicePixels="True">
                                                                 <Line X1="0.5" Y1="0"
                                                                       X2="0.5" Y2="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                                                       Stroke="White" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                                                 <Line X1="0" Y1="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LineOffsetConverter}}"
                                                                       X2="{Binding Path=ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" Y2="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LineOffsetConverter}}"
                                                                       Stroke="White" StrokeThickness="1" SnapsToDevicePixels="True"/>
                                                                 <Viewbox Stretch="Uniform" Margin="2">
                                                                     <Path x:Name="CheckMark"
                                                                           Data="M 0 5 L 3.5 8.5 L 8.5 0"
                                                                           Stroke="{TemplateBinding Foreground}"
                                                                           StrokeThickness="1.5"
                                                                           Visibility="Collapsed"/>
                                                                 </Viewbox>
                                                             </Grid>
                                                             <ControlTemplate.Triggers>
                                                                 <Trigger Property="IsChecked" Value="True">
                                                                     <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                                                 </Trigger>
                                                                 <Trigger Property="IsMouseOver" Value="True">
                                                                     <Setter Property="Cursor" Value="Hand"/>
                                                                 </Trigger>
                                                             </ControlTemplate.Triggers>
                                                         </ControlTemplate>
                                                     </Setter.Value>
                                                 </Setter>
                                             </Style>
                                         </CheckBox.Style>
                                     </CheckBox>
                                 </Grid>
                                 <Border.ContextMenu>
                                     <ContextMenu>
                                         <MenuItem Header="Select" Command="{Binding SelectCommand}" />
                                         <MenuItem Header="Hide" Command="{Binding HideCommand}" />
                                         <MenuItem Header="Unhide" Command="{Binding UnhideCommand}" />
                                         <Separator />
                                         <MenuItem Header="Select All From This Mod" Command="{Binding SelectAllFromThisModCommand}" />
                                         <MenuItem Header="Select Available From This Mod" Command="{Binding SelectAvailableFromThisModCommand}" />
                                         <MenuItem Header="Select Visible From This Mod" Command="{Binding SelectVisibleFromThisModCommand}" />
                                         <MenuItem Header="Select Visible &amp; Available From This Mod" Command="{Binding SelectVisibleAndAvailableFromThisModCommand}" />
                                         <MenuItem Header="Hide All From This Mod" Command="{Binding HideAllFromThisModCommand}" />
                                         <MenuItem Header="Unhide All From This Mod" Command="{Binding UnhideAllFromThisModCommand}" />
                                         <Separator />
                                         <MenuItem Header="Jump to Mod" Command="{Binding JumpToModCommand}" Visibility="{Binding CanJumpToMod, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                         <Separator/>
                                    
                                        <MenuItem Header="Select Source Plugin"
                                                    Visibility="{Binding IsAmbiguousSource, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                    ItemsSource="{Binding AvailableSourcePlugins}">
                                            <MenuItem.ItemContainerStyle>
                                                <Style TargetType="MenuItem">
                                                    <Setter Property="Header" Value="{Binding Converter={StaticResource ModKeyToStringConverter}}"/>
                                                    <Setter Property="Command" Value="{Binding DataContext.SetNpcSourcePluginCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                                    <Setter Property="CommandParameter" Value="{Binding}"/>
                                                    <Setter Property="IsCheckable" Value="True"/>
                                                    <Setter Property="IsChecked">
                                                        <Setter.Value>
                                                            <MultiBinding Converter="{StaticResource AreModKeysEqualMultiConverter}">
                                                                <Binding Path="."/>
                                                                <Binding Path="DataContext.CurrentSourcePlugin" RelativeSource="{RelativeSource AncestorType=ContextMenu}"/>
                                                            </MultiBinding>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </MenuItem.ItemContainerStyle>
                                        </MenuItem>
                                        <MenuItem Header="Select Same Source Plugin Where Possible"
                                                    Visibility="{Binding IsAmbiguousSource, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                    Command="{Binding SelectSameSourcePluginWherePossibleCommand}"
                                                    ToolTip="For all other ambiguous NPCs in this mod, sets their source to this source plugin if it contains the NPC."/>
                                        <Separator/>
                                         
                                         <MenuItem Header="Show Full Image" Command="{Binding ToggleFullScreenCommand}"/>
                                         <Separator/>
                                         <MenuItem Command="{Binding ShareWithNpcCommand}"
                                                   ToolTip="Make this appearance available for another NPC.">
                                             <MenuItem.Style>
                                                 <Style TargetType="MenuItem">
                                                     <Setter Property="Header" Value="Share with NPC"/>
                                                     <Setter Property="Visibility" Value="Visible"/>
                                                     <Style.Triggers>
                                                         <DataTrigger Binding="{Binding IsGuestAppearance}" Value="True">
                                                             <Setter Property="Visibility" Value="Collapsed"/>
                                                         </DataTrigger>
                                                     </Style.Triggers>
                                                 </Style>
                                             </MenuItem.Style>
                                         </MenuItem>

                                         <MenuItem Command="{Binding UnshareFromNpcCommand}"
                                                   ToolTip="Remove this guest appearance from the current NPC.">
                                             <MenuItem.Style>
                                                 <Style TargetType="MenuItem">
                                                     <Setter Property="Header" Value="Unshare from this NPC"/>
                                                     <Setter Property="Visibility" Value="Collapsed"/>
                                                     <Style.Triggers>
                                                         <DataTrigger Binding="{Binding IsGuestAppearance}" Value="True">
                                                             <Setter Property="Visibility" Value="Visible"/>
                                                         </DataTrigger>
                                                     </Style.Triggers>
                                                 </Style>
                                             </MenuItem.Style>
                                         </MenuItem>
                                         <MenuItem Command="{Binding AddToFavoritesCommand}">
                                             <MenuItem.Style>
                                                 <Style TargetType="MenuItem">
                                                     <Setter Property="Header" Value="Add to Favorites"/>
                                                     <Style.Triggers>
                                                         <DataTrigger Binding="{Binding IsFavorite}" Value="True">
                                                             <Setter Property="Header" Value="Remove from Favorites"/>
                                                         </DataTrigger>
                                                     </Style.Triggers>
                                                 </Style>
                                             </MenuItem.Style>
                                         </MenuItem>
                                     </ContextMenu>
                                 </Border.ContextMenu>
                             </Border>
                         </DataTemplate>
                     </ItemsControl.ItemTemplate>
                 </ItemsControl>
             </ScrollViewer>

            <TextBlock Grid.Column="2" Text="Select an NPC..." HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" Foreground="Gray" TextWrapping="Wrap" Margin="20">
                 <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedNpc}" Value="{x:Null}"> <Setter Property="Visibility" Value="Visible"/> <Setter Property="Text" Value="Select an NPC from the list on the left to see appearance options."/> </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions> <Condition Binding="{Binding SelectedNpc, Converter={StaticResource IsNotNullConverter}}" Value="True" /> <Condition Binding="{Binding CurrentNpcAppearanceMods.Count}" Value="0" /> </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Visible" /> <Setter Property="Text" Value="No appearance options found for the selected NPC."/>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </Grid>

        <!-- Description Panel & Zoom Controls (Grid.Row="2") -->
        <Border Grid.Row="2" BorderBrush="Gray" BorderThickness="0,1,0,0" Padding="5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/> <!-- Description Area -->
                    <ColumnDefinition Width="Auto"/> <!-- Zoom Controls -->
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" Background="{DynamicResource PrimaryBackground}" Padding="0" VerticalAlignment="Center"
                        Visibility="{Binding ShowNpcDescriptions, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentNpcDescription}" Value="{x:Null}"> <Setter Property="Visibility" Value="Collapsed"/> </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentNpcDescription}" Value="{x:Static System:String.Empty}"> <Setter Property="Visibility" Value="Collapsed"/> </DataTrigger>
                                <DataTrigger Binding="{Binding ShowNpcDescriptions}" Value="False"> <Setter Property="Visibility" Value="Collapsed"/> </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                    <Grid MinHeight="25">
                        <ScrollViewer MaxHeight="40" VerticalScrollBarVisibility="Auto">
                            <TextBlock Text="{Binding CurrentNpcDescription}" TextWrapping="Wrap"
                                       Foreground="{DynamicResource PrimaryForeground}"/>
                        </ScrollViewer>
                        <TextBlock Text="Loading description..." FontStyle="Italic" Foreground="Gray" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Visibility="{Binding IsLoadingDescription, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </Grid>
                </Border>
                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                    <Button x:Name="ZoomOutButton" Content="-" Width="25" Height="25" Margin="2,0" ToolTip="Zoom Out (Ctrl+Scroll Wheel)"/>
                    <TextBox x:Name="ZoomPercentageTextBox" Width="60" Height="25" Margin="2,0" TextAlignment="Center" VerticalContentAlignment="Center"
                             Text="{Binding NpcsViewZoomLevel, StringFormat='F2', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             PreviewMouseWheel="ZoomPercentageTextBox_PreviewMouseWheel"
                             ToolTip="Current Zoom Level. Editable. Ctrl+Scroll Wheel in image area or Scroll Wheel here to adjust."/>
                    <TextBlock Text="%" VerticalAlignment="Center" Margin="0,0,5,0"/>
                    <Button x:Name="ZoomInButton" Content="+" Width="25" Height="25" Margin="2,0" ToolTip="Zoom In (Ctrl+Scroll Wheel)"/>
                    <CheckBox x:Name="LockZoomCheckBox" Content="Lock Zoom" Margin="10,0,5,0" VerticalAlignment="Center" ToolTip="Lock the current zoom level. If unchecked, zoom adjusts to fit images."/>
                    <Button x:Name="ResetZoomNpcsButton" Content="Reset Zoom" Margin="5,0,0,0" Padding="5,2"
                            Command="{Binding ResetZoomNpcsCommand}"
                            ToolTip="Reset zoom to automatically fit images."/>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</reactiveui:ReactiveUserControl>