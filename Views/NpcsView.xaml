<!-- NpcsView.xaml -->
<reactiveui:ReactiveUserControl x:Class="NPC_Plugin_Chooser_2.Views.NpcsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:NPC_Plugin_Chooser_2.Views"
             xmlns:vm="clr-namespace:NPC_Plugin_Chooser_2.View_Models"
             xmlns:reactiveui="http://reactiveui.net"
             mc:Ignorable="d"
             x:TypeArguments="vm:VM_NpcSelectionBar"
             d:DataContext="{d:DesignInstance Type=vm:VM_NpcSelectionBar}"
             d:DesignHeight="600" d:DesignWidth="800">

    <UserControl.Resources>
        <local:BooleanToBrushConverter x:Key="BooleanToBrushConverter"/>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/> <!-- NPC List -->
            <ColumnDefinition Width="*"/> <!-- Appearance Mod Images -->
        </Grid.ColumnDefinitions>

        <!-- Left Column: NPC List -->
        <Border Grid.Column="0" BorderThickness="0,0,1,0" BorderBrush="DarkGray">
            <!-- Added x:Name -->
            <ListBox x:Name="NpcListBox"
                     ItemsSource="{Binding Npcs}"
                     SelectedItem="{Binding SelectedNpc, Mode=TwoWay}"
                     DisplayMemberPath="DisplayName"
                     ScrollViewer.VerticalScrollBarVisibility="Auto"/>
            <!-- Consider using ItemTemplate for richer display if needed -->
            <!-- <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding DisplayName}"/>
                </DataTemplate>
            </ListBox.ItemTemplate> -->
        </Border>


        <!-- Right Column: Appearance Mod Images -->
        <ScrollViewer Grid.Column="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
             <!-- Added x:Name -->
             <!-- ItemsControl bound to the VM_AppearanceMod collection for the selected NPC -->
            <ItemsControl x:Name="AppearanceModsItemsControl" ItemsSource="{Binding CurrentNpcAppearanceMods}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <!-- WrapPanel arranges images and fills space -->
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type vm:VM_AppearanceMod}">
                         <!-- Appearance Mod View (DataTemplate) -->
                         <Border BorderThickness="2" Margin="5"
                                 BorderBrush="{Binding IsSelected, Converter={StaticResource BooleanToBrushConverter}, ConverterParameter=LimeGreen|Transparent}">
                            <Grid Width="150" Height="150" Background="LightGray">
                                <Image Source="{Binding ImagePath}" Stretch="Uniform" ToolTip="{Binding ModKey.FileName}">
                                    <Image.InputBindings>
                                        <MouseBinding MouseAction="LeftClick" Command="{Binding SelectCommand}" />
                                        <MouseBinding MouseAction="RightClick" Command="{Binding ToggleFullScreenCommand}" />
                                    </Image.InputBindings>
                                     <!-- Error Handling / Placeholder -->
                                     <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ImagePath}" Value="{x:Null}">
                                                    <!-- Optionally show a placeholder or text -->
                                                    <!-- <Setter Property="Source" Value="path/to/placeholder.png"/> -->
                                                </DataTrigger>
                                                 <DataTrigger Binding="{Binding ImagePath}" Value="">
                                                    <!-- Optionally show a placeholder or text -->
                                                    <!-- <Setter Property="Source" Value="path/to/placeholder.png"/> -->
                                                </DataTrigger>
                                                 <!-- Add trigger for file not exists? Requires custom logic or converter -->
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <TextBlock Text="{Binding ModKey.FileName}" VerticalAlignment="Bottom" HorizontalAlignment="Center" Background="#AAFFFFFF" FontSize="10" TextTrimming="CharacterEllipsis"/>
                            </Grid>
                         </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <!-- Optional: Display text if no NPC is selected -->
         <TextBlock Grid.Column="1" Text="Select an NPC from the left list to see appearance options."
                   HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="16" Foreground="Gray" TextWrapping="Wrap">
             <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedNpc}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>

    </Grid>

</reactiveui:ReactiveUserControl>