<!-- MainWindow.xaml -->
<reactiveui:ReactiveWindow x:Class="NPC_Plugin_Chooser_2.Views.MainWindow"
                           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                           xmlns:local="clr-namespace:NPC_Plugin_Chooser_2.Views"
                           xmlns:vm="clr-namespace:NPC_Plugin_Chooser_2.View_Models"
                           xmlns:themes="clr-namespace:NPC_Plugin_Chooser_2.Themes"
                           xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                           xmlns:reactiveui="http://reactiveui.net"
                           mc:Ignorable="d"
                           x:TypeArguments="vm:VM_MainWindow"
                           d:DataContext="{d:DesignInstance Type=vm:VM_MainWindow}"
                           Title="NPC Plugin Chooser" Height="700" Width="1000"
                           Style="{DynamicResource ThemedWindowStyle}">
    
    <i:Interaction.Behaviors>
        <themes:TitleBarThemingBehavior />
    </i:Interaction.Behaviors>
    
    <Window.Resources>
        <Style x:Key="TabToggleButtonStyle" TargetType="RadioButton">
            <Setter Property="Background" Value="{DynamicResource ToggleButtonBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1,1,1,0"
                                CornerRadius="3,3,0,0"
                                Padding="10,4">
                            <TextBlock Text="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="White"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter TargetName="Border" Property="Panel.ZIndex" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/> <!-- Tab Navigation -->
            <RowDefinition Height="*"/> <!-- Content -->
        </Grid.RowDefinitions>

        <!-- Tab Navigation -->
        <StackPanel Grid.Row="0"
                    Orientation="Horizontal">
        
          <RadioButton x:Name="NpcsRadioButton"
                       Style="{StaticResource TabToggleButtonStyle}"
                       Content="NPCs"
                       GroupName="MainTabs"
                       IsChecked="{Binding IsNpcsTabSelected, Mode=TwoWay}"
                       IsEnabled="{Binding AreOtherTabsEnabled}" />
        
          <RadioButton x:Name="ModsRadioButton"
                       Style="{StaticResource TabToggleButtonStyle}"
                       Content="Mods"
                       GroupName="MainTabs"
                       IsChecked="{Binding IsModsTabSelected, Mode=TwoWay}"
                       IsEnabled="{Binding AreOtherTabsEnabled}" />
          
          <RadioButton x:Name="SummaryRadioButton"
                       Style="{StaticResource TabToggleButtonStyle}"
                       Content="Summary"
                       GroupName="MainTabs"
                       IsChecked="{Binding IsSummaryTabSelected, Mode=TwoWay}"
                       IsEnabled="{Binding AreOtherTabsEnabled}" />
        
          <RadioButton x:Name="SettingsRadioButton"
                       Style="{StaticResource TabToggleButtonStyle}"
                       Content="Settings"
                       GroupName="MainTabs"
                       IsChecked="{Binding IsSettingsTabSelected, Mode=TwoWay}"
                       IsEnabled="True" />
        
          <RadioButton x:Name="RunRadioButton"
                       Style="{StaticResource TabToggleButtonStyle}"
                       Content="Run"
                       GroupName="MainTabs"
                       IsChecked="{Binding IsRunTabSelected, Mode=TwoWay}"
                       IsEnabled="{Binding AreOtherTabsEnabled}" />
        
        </StackPanel>

        <!-- Content Area -->
        <Border Grid.Row="1" BorderThickness="1" BorderBrush="DarkGray" Margin="5" VerticalAlignment="Stretch">
            <reactiveui:ViewModelViewHost x:Name="ViewModelViewHost" ViewModel="{Binding CurrentViewModel}" 
                                          VerticalAlignment="Stretch"
                                          HorizontalAlignment="Stretch"
                                          HorizontalContentAlignment="Stretch"
                                          VerticalContentAlignment="Stretch"/>
        </Border>
    </Grid>
</reactiveui:ReactiveWindow>