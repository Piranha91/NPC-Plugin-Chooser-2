<reactiveui:ReactiveWindow x:Class="NPC_Plugin_Chooser_2.Views.FavoriteFacesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NPC_Plugin_Chooser_2.Views"
        xmlns:vm="clr-namespace:NPC_Plugin_Chooser_2.View_Models"
        xmlns:themes="clr-namespace:NPC_Plugin_Chooser_2.Themes"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:reactiveui="http://reactiveui.net"
        mc:Ignorable="d"
        x:TypeArguments="vm:VM_FavoriteFaces"
        Style="{DynamicResource ThemedWindowStyle}"
        Title="Favorite Faces" Height="600" Width="800" WindowStartupLocation="CenterOwner">
    
    <i:Interaction.Behaviors>
        <themes:TitleBarThemingBehavior />
    </i:Interaction.Behaviors>
    
    <Window.Resources>
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:WidthPercentageConverter x:Key="WidthPercentageConverter"/> 
    </Window.Resources>

    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <ScrollViewer Grid.Row="0" x:Name="MugshotScrollViewer"
                      VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled"
                      SizeChanged="MugshotScrollViewer_SizeChanged"
                      PreviewMouseWheel="MugshotScrollViewer_PreviewMouseWheel">
            <ItemsControl x:Name="FavoritesItemsControl" ItemsSource="{Binding FavoriteMugshots}"
                          ScrollViewer.CanContentScroll="True">
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <EventSetter Event="MouseLeftButtonUp" Handler="Mugshot_MouseLeftButtonUp"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ScrollViewer}}"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type vm:VM_SummaryMugshot}">
                        <Border BorderThickness="2" Margin="5" CornerRadius="2"
                                Width="{Binding ImageWidth}" Height="{Binding ImageHeight}">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="BorderBrush" Value="Gray"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                            <Setter Property="BorderBrush" Value="LimeGreen"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            
                            <Border.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Show Full Image" Command="{Binding ToggleFullScreenCommand}"/>
                                        <MenuItem Header="Visit Mod Page"
                                                  DisplayMemberPath="DisplayName"
                                                  Visibility="{Binding CanVisitModPage, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <MenuItem.Style>
                                                <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                                    <Setter Property="Command" Value="{Binding VisitModPageCommand}"/>
                                                    <Setter Property="CommandParameter" Value="{Binding ModPageUrls[0].Url}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HasSingleModPage}" Value="False">
                                                            <Setter Property="Command" Value="{x:Null}"/>
                                                            <Setter Property="CommandParameter" Value="{x:Null}"/>
                                                            <Setter Property="ItemsSource" Value="{Binding ModPageUrls}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </MenuItem.Style>
                                            <MenuItem.ItemContainerStyle>
                                                <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                                    <Setter Property="Command" Value="{Binding DataContext.VisitModPageCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                                    <Setter Property="CommandParameter" Value="{Binding Url}"/>
                                                </Style>
                                            </MenuItem.ItemContainerStyle>
                                        </MenuItem>
                                    </ContextMenu>
                                </Border.ContextMenu>
                            
                            <Grid Background="WhiteSmoke">
                                <Image x:Name="MugshotImage"  Source="{Binding MugshotSource}" Stretch="UniformToFill" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
                                <Border VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Background="{DynamicResource MugshotCaptionBackground}" Padding="3,1">
                                    <StackPanel HorizontalAlignment="Center">
                                        <TextBlock Text="{Binding NpcDisplayName}" Foreground="{DynamicResource MugshotCaptionForeground}"  FontSize="10" HorizontalAlignment="Center" TextAlignment="Center" TextWrapping="Wrap"/>
                                        <Viewbox Stretch="Uniform" StretchDirection="DownOnly"
                                                 Width="{Binding ElementName=MugshotImage, Path=ActualWidth, Converter={StaticResource WidthPercentageConverter}, ConverterParameter=90}">
                                            <TextBlock Text="{Binding ModDisplayName}" Foreground="{DynamicResource MugshotCaptionSecondaryForeground}" FontSize="9" HorizontalAlignment="Center" FontStyle="Italic" TextAlignment="Center" TextWrapping="NoWrap"/>
                                        </Viewbox>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
        
        <Border Grid.Row="1" BorderBrush="Gray" BorderThickness="0,1,0,0" Padding="5">
            <Grid>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                    <Button Command="{Binding ZoomOutCommand}" Content="-" Width="25" Height="25" Margin="2,0" ToolTip="Zoom Out (Ctrl+Scroll Wheel)"/>
                    <TextBox Width="60" Height="25" Margin="2,0" TextAlignment="Center" VerticalContentAlignment="Center"
                             Text="{Binding ZoomLevel, StringFormat='F2', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             PreviewMouseWheel="ZoomPercentageTextBox_PreviewMouseWheel"
                             ToolTip="Current Zoom Level. Editable."/>
                    <TextBlock Text="%" VerticalAlignment="Center" Margin="0,0,5,0"/>
                    <Button Command="{Binding ZoomInCommand}" Content="+" Width="25" Height="25" Margin="2,0" ToolTip="Zoom In (Ctrl+Scroll Wheel)"/>
                    <CheckBox Content="Lock Zoom" IsChecked="{Binding IsZoomLocked, Mode=TwoWay}" Margin="10,0,5,0" VerticalAlignment="Center"/>
                    <Button Content="Reset Zoom" Command="{Binding ResetZoomCommand}" Margin="5,0,0,0" Padding="5,2"/>
                </StackPanel>
                
                <Button Content="Remove from Favorites" 
                        Command="{Binding RemoveFromFavoritesCommand}" 
                        HorizontalAlignment="Center" 
                        Foreground="Red" 
                        FontWeight="SemiBold"
                        ToolTip="Remove the selected face from your favorites."/>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <StackPanel Orientation="Horizontal"> <Button Content="Apply" Command="{Binding ApplyCommand}" MinWidth="80" Margin="5,0"/>
                        <Button Content="Make Available" Command="{Binding MakeAvailableCommand}" MinWidth="80" Margin="5,0" ToolTip="Makes this appearance available as a 'guest' for the target NPC without selecting it."/>
                        <Button Content="Cancel" Command="{Binding CancelCommand}" MinWidth="80" Margin="5,0" IsCancel="True"
                                Visibility="{Binding IsApplyMode, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Visibility="{Binding IsShareMode, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Button Content="Share with NPC" Command="{Binding ShareWithNpcCommand}" MinWidth="100" Margin="5,0"/>
                        <Button Content="Close" Command="{Binding CloseCommand}" MinWidth="80" Margin="5,0" IsCancel="True"/>
                    </StackPanel>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</reactiveui:ReactiveWindow>