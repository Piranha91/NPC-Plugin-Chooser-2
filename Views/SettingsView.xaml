<!-- SettingsView.xaml -->
<reactiveui:ReactiveUserControl x:Class="NPC_Plugin_Chooser_2.Views.SettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:NPC_Plugin_Chooser_2.Views"
             xmlns:vm="clr-namespace:NPC_Plugin_Chooser_2.View_Models"
             xmlns:bsky="clr-namespace:Mutagen.Bethesda.Skyrim;assembly=Mutagen.Bethesda.Skyrim"
             xmlns:models="clr-namespace:NPC_Plugin_Chooser_2.Models"
             xmlns:plugins="clr-namespace:Mutagen.Bethesda.WPF.Plugins;assembly=Mutagen.Bethesda.WPF"
             xmlns:reactiveui="http://reactiveui.net"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             x:TypeArguments="vm:VM_Settings"
             d:DataContext="{d:DesignInstance Type=vm:VM_Settings}"
             d:DesignHeight="800" d:DesignWidth="800"> <!-- Increased height for more controls -->
    <UserControl.Resources>
        <local:FullPathToFolderNameConverter x:Key="FullPathToFolderNameConverter"/>
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <ObjectDataProvider x:Key="SkyrimReleaseEnumValues" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="bsky:SkyrimRelease"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <!-- Optional: Converter for Enum descriptions if desired -->
    </UserControl.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto" Padding="10">
        <StackPanel>

            <!-- Section 1: Game Environment -->
            <GroupBox Header="Game Environment" Margin="0,0,0,10" Padding="5">
                <StackPanel>
                    <!-- Skyrim Game Path -->
                    <TextBlock Text="Skyrim Game Data Path (Optional - Auto-detects if blank):" Margin="0,0,0,2"/>
                    <Grid Margin="0,0,0,2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" Text="{Binding SkyrimGamePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,5,0"/>
                        <Button Grid.Column="1" Content="Browse..." Command="{Binding SelectGameFolderCommand}"/>
                    </Grid>
                    <TextBlock Text="Leave blank to attempt auto-detection based on the selected Skyrim version." FontSize="10" Foreground="Gray" Margin="0,0,0,10"/>

                    <!-- Skyrim Version -->
                    <TextBlock Text="Skyrim Version:" Margin="0,0,0,2"/>
                    <ComboBox ItemsSource="{Binding Source={StaticResource SkyrimReleaseEnumValues}}"
                              SelectedItem="{Binding SkyrimRelease, Mode=TwoWay}" Margin="0,0,0,2"/>
                    <TextBlock Text="Ensure this matches the game version you are modding." FontSize="10" Foreground="Gray" Margin="0,0,0,10"/>

                    <!-- Environment Status -->
                    <TextBlock Text="Environment Status:" FontWeight="Bold" Margin="0,5,0,2"/>
                    <TextBlock>
                        <Run Text="Mutagen Environment Status: "/>
                        <Run FontWeight="Bold">
                            <Run.Style>
                                <Style TargetType="Run">
                                    <Setter Property="Text" Value="{Binding EnvironmentStatus, Mode=OneWay}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding EnvironmentStatus}" Value="Valid">
                                            <Setter Property="Foreground" Value="Green"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding EnvironmentStatus}" Value="Invalid">
                                            <Setter Property="Foreground" Value="Red"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding EnvironmentStatus}" Value="Pending">
                                            <Setter Property="Foreground" Value="Orange"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Run.Style>
                        </Run>
                        <Run Text=" - "/>
                        <Run FontSize="10">
                            <Run.Text>
                                <MultiBinding StringFormat="{}{0} Plugins in Load Order ({1} Active)">
                                    <Binding Path="NumPluginsInEnvironment" Mode="OneWay" />
                                    <Binding Path="NumActivePluginsInEnvironment" Mode="OneWay" />
                                </MultiBinding>
                            </Run.Text>
                        </Run>
                    </TextBlock>
                    <TextBlock Text="{Binding EnvironmentErrorText}" Foreground="Red" TextWrapping="Wrap" MaxHeight="100" ScrollViewer.VerticalScrollBarVisibility="Auto">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <Trigger Property="Text" Value="{x:Null}"><Setter Property="Visibility" Value="Collapsed"/></Trigger>
                                    <Trigger Property="Text" Value=""><Setter Property="Visibility" Value="Collapsed"/></Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
            </GroupBox>

            <!-- Section 2: Mod Environment -->
           <GroupBox Header="Mod Environment" Margin="0,0,0,10" Padding="5">
                <StackPanel>
                    <TextBlock Text="Mods Folder (e.g., MO2 Mods Path):" Margin="0,0,0,2"/>
                    <Grid Margin="0,0,0,2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" Text="{Binding ModsFolder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,5,0"/>
                        <Button Grid.Column="1" Content="Browse..." Command="{Binding SelectModsFolderCommand}"/>
                    </Grid>
                    <TextBlock Text="Specify the root folder where your mods are installed (used for Mod linking)."
                               FontSize="10" Foreground="Gray" Margin="0,0,0,10"/>
                </StackPanel>
            </GroupBox>

            <GroupBox Header="Mugshot Settings" Margin="0,0,0,10" Padding="5">
                <StackPanel>
                    <TextBlock Text="Mugshots Folder:" Margin="0,0,0,2"/>
                    <Grid Margin="0,0,0,2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" Text="{Binding MugshotsFolder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,5,0"/>
                        <Button Grid.Column="1" Content="Browse..." Command="{Binding SelectMugshotsFolderCommand}"/>
                    </Grid>
                    <TextBlock Text="Folder containing subfolders for each mod's NPC preview images."
                               FontSize="10" Foreground="Gray" Margin="0,0,0,10"/>
                    
                    <CheckBox Content="Use FaceFinder API for missing mugshots"
                              IsChecked="{Binding UseFaceFinderFallback, Mode=TwoWay}"
                              Margin="0,0,0,5"
                              Visibility="{Binding IsFaceFinderAvailable, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    
                    <Border Margin="15,5,0,5" BorderBrush="Gray" BorderThickness="1" CornerRadius="3"
                            Visibility="{Binding UseFaceFinderFallback, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <StackPanel>
                            <Label Content="FaceFinder API Key" FontWeight="Bold" Margin="0,10,0,0" ToolTip="Paste your API key below. The key is encrypted and stored locally using your Windows user account credentials."/>
                            <Grid Visibility="{Binding UseFaceFinderFallback, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                    
                                <PasswordBox x:Name="ApiKeyPasswordBox"
                                             Grid.Column="0"
                                             PasswordChanged="ApiKeyPasswordBox_PasswordChanged"
                                             VerticalContentAlignment="Center"
                                             ToolTip="Paste your API key here. It will be stored securely."/>

                                <TextBlock Grid.Column="1" 
                                           Text="✓ Key is set" 
                                           Foreground="Green" 
                                           Margin="10,0,0,0"
                                           VerticalAlignment="Center"
                                           Visibility="{Binding IsApiKeySet, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            </Grid>
                            
                            <CheckBox Content="Cache downloaded images locally"
                                      IsChecked="{Binding CacheFaceFinderImages, Mode=TwoWay}"
                                      Margin="0,10,0,0"
                                      ToolTip="If checked, images downloaded from FaceFinder are saved and checked for updates. If unchecked, images are downloaded fresh every time."
                                      Visibility="{Binding UseFaceFinderFallback, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            
                            <Button Content="Link Mod Names to FaceFinder"
                                    Command="{Binding OpenModLinkerCommand}"
                                    ToolTip="Manually link local mod names to their corresponding entry on the FaceFinder server."
                                    Margin="0,10,0,0"
                                    HorizontalAlignment="Left"
                                    Visibility="{Binding UseFaceFinderFallback, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        </StackPanel>
                    </Border>
                    
                    <CheckBox Content="Auto-Generate missing mugshots using NPC Portrait Creator"
                              IsChecked="{Binding UsePortraitCreatorFallback, Mode=TwoWay}"
                              Margin="0,5,0,0"/>

                    <Border Margin="15,5,0,5" Padding="10" BorderBrush="Gray" BorderThickness="1" CornerRadius="3"
                        Visibility="{Binding UsePortraitCreatorFallback, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <StackPanel>
                            <TextBlock Text="Max Parallel Portrait Renders" FontWeight="Bold" Margin="0,5,0,0"/>
                            <TextBlock TextWrapping="Wrap" Margin="0,0,0,5" Opacity="0.8">
                                Controls how many CPU-intensive portrait generation processes can run at once.
                                Lower values reduce system load during image generation.
                            </TextBlock>
                            <TextBox Text="{Binding MaxParallelPortraitRenders}" 
                                     Width="60" HorizontalAlignment="Left"
                                     PreviewTextInput="IntegerTextBox_PreviewTextInput"
                                     DataObject.Pasting="IntegerTextBox_Pasting" />

                            <TextBlock Text="Mugshot Background Color" FontWeight="Bold" Margin="0,15,0,0"/>
                            <StackPanel Orientation="Horizontal" Margin="0,2,0,5">
                                <Border BorderBrush="Black" BorderThickness="1" Width="100" Height="25"
                                        Background="{Binding MugshotBackgroundColor}" CornerRadius="2"/>
                                <Button Content="Change..." Margin="10,0,0,0"
                                        Command="{Binding SelectBackgroundColorCommand}" VerticalAlignment="Center"/>
                            </StackPanel>
                            
                            <CheckBox Content="Enable Normal Map Hack"
                                      IsChecked="{Binding EnableNormalMapHack, Mode=TwoWay}"
                                      Margin="0,10,0,0">
                                <CheckBox.ToolTip>
                                    <TextBlock TextWrapping="Wrap" MaxWidth="400">
                                        The normal maps as loaded by the Nif model don't produce maximal brightness when illuminated directly, but rather at an angle. This seems physically incorrect, since things should generally look brightest when illuminated head-on. This hack explicitly rotates non-model-space normals to maximally illuminate in the direction of the incident light, making things like eyes and hair look brighter. I think this is more accurate than default, but you can disable this if you think the generated portraits have too much glare.
                                    </TextBlock>
                                </CheckBox.ToolTip>
                            </CheckBox>
                            
                            <CheckBox Content="Use Modded Fallback Textures"
                                      IsChecked="{Binding UseModdedFallbackTextures, Mode=TwoWay}"
                                      Margin="0,10,0,0">
                                <CheckBox.ToolTip>
                                    <TextBlock TextWrapping="Wrap" MaxWidth="400">
                                        If enabled (default), missing textures will search ALL files (loose or BSA) in the base game Data folder as a last resort. For example, vanilla skinned NPCs will use your installed skin textures.
                                        If disabled, this fallback search is restricted to ONLY vanilla Skyrim and Creation Club BSAs, preventing loose or mod-added BSA textures in the base Data folder from overwriting the base game.
                                    </TextBlock>
                                </CheckBox.ToolTip>
                            </CheckBox>
                            
                            <TextBlock Text="Lighting Profile (JSON)" FontWeight="Bold" Margin="0,10,0,0"/>
                            <TextBox Text="{Binding DefaultLightingJsonString, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     AcceptsReturn="True" TextWrapping="Wrap" MaxHeight="200"
                                     VerticalScrollBarVisibility="Auto" FontFamily="Consolas">
                                <TextBox.Style>
                                    <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsLightingJsonValid}" Value="True">
                                                <Setter Property="BorderBrush" Value="Green"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsLightingJsonValid}" Value="False">
                                                <Setter Property="BorderBrush" Value="Red"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            
                            <TextBlock Text="Camera Position:" Margin="0,15,0,2"/>
                            <ComboBox ItemsSource="{Binding CameraModes}" SelectedItem="{Binding SelectedCameraMode, Mode=TwoWay}" Margin="0,0,0,10"/>

                            <!-- NEW: FOV control (always visible) -->
            <TextBlock Text="Vertical Field of View (degrees):" Margin="0,0,0,2"/>
            <TextBox Text="{Binding VerticalFOV, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,5"
                     PreviewTextInput="FloatTextBox_PreviewTextInput"
                     DataObject.Pasting="FloatTextBox_Pasting"
                     ToolTip="Camera vertical field of view in degrees. Default is 25."/>

            <!-- NEW: Euler angle controls (always visible) -->
            <TextBlock Text="Camera Pitch (degrees):" Margin="0,5,0,2"/>
            <TextBox Text="{Binding CamPitch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,5"
                     PreviewTextInput="FloatTextBox_PreviewTextInput"
                     DataObject.Pasting="FloatTextBox_Pasting"/>

            <TextBlock Text="Camera Yaw (degrees):" Margin="0,0,0,2"/>
            <TextBox Text="{Binding CamYaw, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,5"
                     PreviewTextInput="FloatTextBox_PreviewTextInput"
                     DataObject.Pasting="FloatTextBox_Pasting"/>

            <TextBlock Text="Camera Roll (degrees):" Margin="0,0,0,2"/>
            <TextBox Text="{Binding CamRoll, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"
                     PreviewTextInput="FloatTextBox_PreviewTextInput"
                     DataObject.Pasting="FloatTextBox_Pasting"/>

        <!-- Portrait mode offsets (conditionally visible) -->
        <StackPanel>
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedCameraMode}" Value="Portrait">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <TextBlock Text="Head Top Offset (%):" Margin="0,0,0,2"/>
            <TextBox Text="{Binding HeadTopOffset, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,5"
                     PreviewTextInput="FloatTextBox_PreviewTextInput"
                     DataObject.Pasting="FloatTextBox_Pasting"/>
            <TextBlock Text="Head Bottom Offset (%):" Margin="0,0,0,2"/>
            <TextBox Text="{Binding HeadBottomOffset, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,5"
                     PreviewTextInput="FloatTextBox_PreviewTextInput"
                     DataObject.Pasting="FloatTextBox_Pasting"/>
        </StackPanel>

        <!-- Fixed mode position (conditionally visible) -->
        <StackPanel>
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedCameraMode}" Value="Fixed">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <TextBlock Text="Camera X:" Margin="0,0,0,2"/>
            <TextBox Text="{Binding CamX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,5"
                     PreviewTextInput="FloatTextBox_PreviewTextInput"
                     DataObject.Pasting="FloatTextBox_Pasting"/>
            <TextBlock Text="Camera Y:" Margin="0,0,0,2"/>
            <TextBox Text="{Binding CamY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,5"
                     PreviewTextInput="FloatTextBox_PreviewTextInput"
                     DataObject.Pasting="FloatTextBox_Pasting"/>
            <TextBlock Text="Camera Z:" Margin="0,0,0,2"/>
            <TextBox Text="{Binding CamZ, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,5"
                     PreviewTextInput="FloatTextBox_PreviewTextInput"
                     DataObject.Pasting="FloatTextBox_Pasting"/>
        </StackPanel>
                            <TextBlock Text="Output Resolution:" Margin="0,10,0,2"/>
                            <StackPanel Orientation="Horizontal">
                                <TextBox Text="{Binding ImageXRes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="50"
                                         PreviewTextInput="IntegerTextBox_PreviewTextInput"
                                         DataObject.Pasting="IntegerTextBox_Pasting"/>
                                <TextBlock Text=" x " VerticalAlignment="Center" Margin="5,0"/>
                                <TextBox Text="{Binding ImageYRes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="50"
                                         PreviewTextInput="IntegerTextBox_PreviewTextInput"
                                         DataObject.Pasting="IntegerTextBox_Pasting"/>
                            </StackPanel>
                            
                            <Grid Margin="0,10,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Button Grid.Column="0"
                                        Content="Delete All Auto-Generated Mugshots"
                                        Command="{Binding DeleteAutoGeneratedMugshotsCommand}"
                                        Padding="10,5"
                                        ToolTip="Permanently deletes all auto-generated portrait images and cleans up empty folders.">
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                            <Setter Property="Background" Value="#FFE57373"/>
                                            <Setter Property="Foreground" Value="White"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="#FFD32F2F"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>

                                <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="15,0,0,0" VerticalAlignment="Center">
                                    <TextBlock Text="Search Mode:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                    <ComboBox ItemsSource="{Binding MugshotSearchModes}"
                                              SelectedItem="{Binding SelectedMugshotSearchMode, Mode=TwoWay}"
                                              MinWidth="120"
                                              ToolTip="Fast: Uses cached list of generated mugshots (recommended). Comprehensive: Scans all mugshot folders and reads metadata."/>
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </Border>
                    
                    <CheckBox Content="Normalize Image Dimensions"
                              IsChecked="{Binding NormalizeImageDimensions, Mode=TwoWay}"
                              Margin="0,5,0,0"
                              ToolTip="If checked, all images will be cropped and resized to the most common dimensions for a uniform appearance. This may slightly increase load times."/> 
                    
                    <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                        <TextBlock Text="Max # Mugshots To Fit On Screen:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                        <TextBox Text="{Binding MaxMugshotsToFit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                 Width="50"
                                 ToolTip="The maximum number of mugshots to fit on-screen when auto-sizing. A lower number results in larger images."/>
                    </StackPanel>
                </StackPanel>
            </GroupBox>

            <!-- Section 3: Output Settings -->
            <GroupBox Header="Output Settings" Margin="0,0,0,10" Padding="5">
                <StackPanel>
                    <!-- Output Directory (New) -->
                    <TextBlock Text="Output Directory:" Margin="0,0,0,2"/>
                    <Grid Margin="0,0,0,2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" Text="{Binding OutputDirectory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,5,0"/>
                        <Button Grid.Column="1" Content="Browse..." Command="{Binding SelectOutputDirectoryCommand}"/>
                    </Grid>
                    <TextBlock Text="Directory where the generated plugin and related files will be saved." FontSize="10" Foreground="Gray" Margin="0,0,0,5"/>

                    <!-- Append Date/Time Stamp (New) -->
                    <CheckBox Content="Append Date/Time Stamp to Output Directory"
                              IsChecked="{Binding AppendTimestampToOutputDirectory, Mode=TwoWay}"
                              Margin="0,0,0,10"
                              ToolTip="If checked, a timestamp (YYYYMMDD_HHMMSS) will be appended to the Output Directory name upon generation."/>

                    <!-- Output Plugin Name (Was Output Mod Name) -->
                    <TextBlock Text="Output Plugin Name:" Margin="0,0,0,2"/>
                    <TextBox Text="{Binding TargetPluginName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,10"/>
                    <!-- Output Mod Name (Conceptual - No UI Element Needed, value comes from model default) -->

                    <!-- Patching Mode (New) -->
                    <TextBlock Text="Patching Mode:" Margin="0,0,0,2"/>
                    <Grid Margin="0,0,0,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ComboBox Grid.Column="0"
                                  ItemsSource="{Binding PatchingModes}"
                                  SelectedItem="{Binding SelectedPatchingMode, Mode=TwoWay}"
                                  Margin="0,0,5,0"/>
                        <Button Grid.Column="1" Content="?" Command="{Binding ShowPatchingModeHelpCommand}" Padding="6,2"/>
                    </Grid>

                    <TextBlock Text="Override Handling Mode:" Margin="0,5,0,2"/>
                    <Grid Margin="0,0,0,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <ComboBox Grid.Column="0"
                                  ItemsSource="{Binding RecordOverrideHandlingModes}"
                                  SelectedItem="{Binding SelectedRecordOverrideHandlingMode, Mode=TwoWay}"
                                  Margin="0,0,5,0"
                                  ToolTip="Determines how overriden records of other plugins are handled."/>
                        <Button Grid.Column="1" Content="?" Command="{Binding ShowOverrideHandlingModeHelpCommand}" Padding="6,2"/>
                    </Grid>
                    <CheckBox Content="SkyPatcher Mode"
                              IsChecked="{Binding UseSkyPatcherMode, Mode=TwoWay}"
                              Margin="0,5,0,0"
                              ToolTip="Generates a SkyPatcher .ini file for runtime patching instead of a traditional ESP. This is an advanced feature that may conflict with other runtime patchers."/>
                    <CheckBox Content="Auto-ESLify If Possible"
                              IsChecked="{Binding AutoEslIfy, Mode=TwoWay}"
                              Margin="0,5,0,0"
                              ToolTip="When writing the output plugin, checks if it can be ESLified and performs the ESLification proccess"/>
                    
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,0" VerticalAlignment="Center">
                        <CheckBox Content="Split Output" IsChecked="{Binding SplitOutput, Mode=TwoWay}" VerticalAlignment="Center"
                                  ToolTip="Splits the generated patch into multiple smaller plugins based on the criteria to the right."/>

                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="10,0,0,0">
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SplitOutput}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            
                            <TextBlock Text="by" VerticalAlignment="Center" Margin="0,0,10,0" FontStyle="Italic"/>
                            <CheckBox Content="Gender" IsChecked="{Binding SplitOutputByGender, Mode=TwoWay}" VerticalAlignment="Center" Margin="0,0,10,0"/>
                            <CheckBox Content="Race" IsChecked="{Binding SplitOutputByRace, Mode=TwoWay}" VerticalAlignment="Center" Margin="0,0,10,0"/>
                            <TextBox Text="{Binding SplitOutputMaxNpcs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}" Width="50" VerticalContentAlignment="Center"
                                     ToolTip="Maximum number of NPCs to place in a single split plugin."/>
                            <TextBlock Text="Max # NPCs" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
            
            <!-- Section: Display Settings -->
            <GroupBox Header="Display Settings" Margin="0,0,0,10" Padding="5">
                <StackPanel>
                    <CheckBox Content="Enable Dark Mode"
                              IsChecked="{Binding IsDarkMode, Mode=TwoWay}"
                              Margin="0,5,0,0" />
                    
                    <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                        <CheckBox Content="Enable Localization"
                                  IsChecked="{Binding IsLocalizationEnabled, Mode=TwoWay}"
                                  VerticalAlignment="Center"/>

                        <ComboBox ItemsSource="{Binding AvailableLanguages}"
                                  SelectedItem="{Binding SelectedLocalizationLanguage, Mode=TwoWay}"
                                  MinWidth="120"
                                  Margin="10,0,0,0">
                            <ComboBox.Style>
                                <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsLocalizationEnabled}" Value="True">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.Style>
                        </ComboBox>
                    </StackPanel>
                    
                    <CheckBox Content="Don't show me popup warnings for actions with potential side effects"
                              IsChecked="{Binding SuppressPopupWarnings, Mode=TwoWay}"
                              Margin="0,5,0,0"
                              ToolTip="If checked, confirmation dialogs for potentially risky settings will be suppressed. Only check this if you're sure you understand what you're doing."/>
                    
                    <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                        <TextBlock Text="NPC List Display:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                        <CheckBox Content="Name" IsChecked="{Binding ShowNpcNameInList, Mode=TwoWay}" VerticalAlignment="Center" Margin="0,0,10,0" ToolTip="Show the NPC's in-game name."/>
                        <CheckBox Content="EditorID" IsChecked="{Binding ShowNpcEditorIdInList, Mode=TwoWay}" VerticalAlignment="Center" Margin="0,0,10,0" ToolTip="Show the NPC's editor ID."/>
                        <CheckBox Content="FormKey" IsChecked="{Binding ShowNpcFormKeyInList, Mode=TwoWay}" VerticalAlignment="Center" Margin="0,0,10,0" ToolTip="Show the NPC's FormKey (e.g., 000123AB:Skyrim.esm)."/>
                        <CheckBox Content="FormID" IsChecked="{Binding ShowNpcFormIdInList, Mode=TwoWay}" VerticalAlignment="Center" Margin="0,0,10,0" ToolTip="Show the NPC's full FormID based on your load order (e.g., 010123AB)."/>
                        <TextBlock Text="Separator:" VerticalAlignment="Center" Margin="0,0,5,0"/>
                        <TextBox Text="{Binding NpcListSeparator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="30" VerticalAlignment="Center"/>
                    </StackPanel>
                </StackPanel>
            </GroupBox>

            <!-- Section 4: EasyNPC Transfer -->
            <GroupBox Header="EasyNPC Transfer" Margin="0,0,0,10" Padding="5">
                <StackPanel>
                    <!-- Import Button -->
                    <Button Content="Import NPC Appearance Choices from EasyNPC Profile"
                            Command="{Binding ImportEasyNpcCommand}"
                            HorizontalAlignment="Left" Margin="0,0,0,5"
                            ToolTip="Import settings from a standard EasyNPC profile text file."/>

                    <!-- Export Button -->
                    <Button Content="Export NPC Appearance Choices To New EasyNPC Profile"
                            Command="{Binding ExportEasyNpcCommand}"
                            HorizontalAlignment="Left" Margin="0,0,0,5"
                            ToolTip="Export current settings to a new EasyNPC profile text file."/>

                    <!-- *** NEW: Update Profile Controls *** -->
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,15">
                        <Button Content="Update Existing EasyNPC Profile"
                                Command="{Binding UpdateEasyNpcProfileCommand}"
                                CommandParameter="{Binding AddMissingNpcsOnUpdate}"
                                ToolTip="Update an existing EasyNPC profile file with current selections."
                                VerticalAlignment="Center"/>
                        <CheckBox Content="Add Missing NPCs?"
                                  IsChecked="{Binding AddMissingNpcsOnUpdate, Mode=TwoWay}"
                                  Margin="10,0,0,0"
                                  VerticalAlignment="Center"
                                  ToolTip="If checked, NPCs selected here but not found in the file will be added."/>
                    </StackPanel>
                    <!-- *** END: Update Profile Controls *** -->


                    <!-- NPC Default Plugin Exclusions (Unchanged) -->
                    <TextBlock Text="NPC Default Plugin Exclusions:" Margin="0,0,0,2"/>
                    <local:ModSelectorView DataContext="{Binding ExclusionSelectorViewModel}"
                                           Height="180"
                                           Margin="0,0,0,10"
                                           ToolTip="Select plugins to exclude when determining the 'default' appearance plugin in EasyNPC-like mode."/>
                    <TextBlock Text="Plugins selected here will be ignored when assigning conflict-winning overrides to EasyNPC's Default Plugin selections" FontSize="10" Foreground="Gray" TextWrapping="Wrap"/>
                </StackPanel>
            </GroupBox>
            <GroupBox Header="Load Order Import Settings" Margin="0,0,0,10" Padding="5">
                <StackPanel>
                    <TextBlock Text="Import Choices from Load Order Exclusions:" Margin="0,0,0,2"/>
                    <local:ModSelectorView DataContext="{Binding ImportFromLoadOrderExclusionSelectorViewModel}"
                                           Height="180"
                                           Margin="0,0,0,10"
                                           ToolTip="Select plugins to exclude when using the 'Import Choices from Load Order' feature."/>
                    <TextBlock Text="When importing choices from your load order, winning override plugins selected here will be ignored, and the next available override will be chosen instead." FontSize="10" Foreground="Gray" TextWrapping="Wrap"/>
                </StackPanel>
            </GroupBox>
           <GroupBox Header="Mod Import Settings" Margin="0,5,0,10" Padding="5">
                <StackPanel>
                    <TextBlock Text="Non-Appearance Mods:" Margin="0,0,0,2"/>

                    <TextBox Text="{Binding NonAppearanceModFilterText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,3" ToolTip="Filter the list of non-appearance mods below."/>

                          <ListBox ItemsSource="{Binding FilteredNonAppearanceMods}" Height="150" HorizontalContentAlignment="Stretch" BorderThickness="1">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            
                            <TextBlock Grid.Column="0" 
                                       Text="{Binding Key, Converter={StaticResource FullPathToFolderNameConverter}}" 
                                       ToolTip="{Binding Value}"
                                       VerticalAlignment="Center"/>

                            <Button Grid.Column="1" 
                                    Content="🔄" 
                                    Command="{Binding DataContext.RescanCachedModCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                    CommandParameter="{Binding Key}"
                                    ToolTip="Re-scan this folder to check if it is now an appearance mod"
                                    FontWeight="Bold"
                                    Cursor="Hand"
                                    Margin="10,0,0,0"
                                    VerticalAlignment="Center">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>
                             <Button Grid.Column="2" 
                                    Content="X" 
                                    Command="{Binding DataContext.RemoveCachedModCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                    CommandParameter="{Binding Key}"
                                    Foreground="Red" 
                                    FontWeight="Bold"
                                    Cursor="Hand"
                                    Margin="5,0,0,0"
                                    VerticalAlignment="Center">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

                    <TextBlock Text="These mods have been auto-determined to not provide NPC replacers.
Mouse over each entry to see the reason.
Delete a mod if you want to re-scan it."
                               FontSize="10" 
                               Foreground="Gray" 
                  
             TextWrapping="Wrap"
                               Margin="0,2,0,0" />
                </StackPanel>
            </GroupBox>

            <GroupBox Header="Spawn Bat File Options" Margin="0,0,0,10" Padding="5">
                <StackPanel>
                    <TextBlock Text="Console Commands Before Spawning:" Margin="0,0,0,2"/>
                    <TextBox 
                        Text="{Binding BatFilePreCommands, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        AcceptsReturn="True"
                        TextWrapping="Wrap"
                        Height="80"
                        VerticalScrollBarVisibility="Auto"
                        ToolTip="Enter any console commands you want to execute BEFORE the player.placeatme commands in the generated file."/>

                    <TextBlock Text="Console Commands After Spawning:" Margin="0,10,0,2"/>
                    <TextBox 
                        Text="{Binding BatFilePostCommands, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        AcceptsReturn="True"
                        TextWrapping="Wrap"
                        Height="80"
                        VerticalScrollBarVisibility="Auto"
                        ToolTip="Enter any console commands you want to execute AFTER the player.placeatme commands."/>
                </StackPanel>
            </GroupBox>
        </StackPanel>
    </ScrollViewer>
</reactiveui:ReactiveUserControl>