<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:reactiveui="http://reactiveui.net">

    <SolidColorBrush x:Key="PrimaryBackground" Color="#252526"/>
    <SolidColorBrush x:Key="SecondaryBackground" Color="#2D2D30"/>
    <SolidColorBrush x:Key="PrimaryForeground" Color="#F1F1F1"/>
    <SolidColorBrush x:Key="BorderBrush" Color="#434346"/>
    <SolidColorBrush x:Key="TextBoxBackground" Color="#3C3C3C"/>
    <SolidColorBrush x:Key="ButtonBackground" Color="#3F3F46"/>
    <SolidColorBrush x:Key="ButtonHoverBackground" Color="#555555"/>
    <SolidColorBrush x:Key="DisabledButtonBackground" Color="#2D2D30"/>
    <SolidColorBrush x:Key="DisabledForeground" Color="#707070"/>
    <SolidColorBrush x:Key="ToggleButtonBackground" Color="#3F3F46"/>
    <SolidColorBrush x:Key="HighlightAlteredText" Color="MediumPurple"/>
    <SolidColorBrush x:Key="MugshotCaptionBackground" Color="#AA000000"/>
    <SolidColorBrush x:Key="MugshotCaptionForeground" Color="#F1F1F1"/>
    <SolidColorBrush x:Key="MugshotCaptionSecondaryForeground" Color="#AAAAAA"/>
    
    <Style TargetType="Control">
        <Setter Property="Foreground" Value="{StaticResource PrimaryForeground}"/>
    </Style>

    <Style x:Key="ThemedWindowStyle" TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackground}"/>
    </Style>
    
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource PrimaryForeground}"/>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource TextBoxBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryForeground}"/>
    </Style>
    
    <Style TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ButtonBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryForeground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="ButtonBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="3"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource ButtonHoverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource DisabledButtonBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="CheckBox">
        <Setter Property="Foreground" Value="{StaticResource PrimaryForeground}"/>
    </Style>
    
    <Style TargetType="RadioButton">
        <Setter Property="Background" Value="{StaticResource ToggleButtonBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
    </Style>

    <Style TargetType="ToggleButton">
        <Setter Property="Background" Value="{StaticResource ToggleButtonBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
    </Style>

    <Style TargetType="GroupBox">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
    </Style>
    
    <Style TargetType="ComboBox">
        <Setter Property="Foreground" Value="{StaticResource PrimaryForeground}"/>
        <Setter Property="Background" Value="{StaticResource TextBoxBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Focusable="false" ClickMode="Press" Background="Transparent" BorderThickness="0"/>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" IsHitTestVisible="False"/>

                        <ContentPresenter Margin="8,0,25,0" IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding ItemTemplate}"
                                          VerticalAlignment="Center"/>

                        <Path Fill="{TemplateBinding Foreground}" Stretch="Uniform" Width="8" Height="8" Margin="0,0,8,0" HorizontalAlignment="Right" Data="F1 M 0,0 L 2.5,2.5 L 5,0 Z" IsHitTestVisible="False"/>
                        <Popup Name="PART_Popup" Placement="Bottom" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" AllowsTransparency="True" Focusable="False">
                            <Grid MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border Background="{DynamicResource PrimaryBackground}" BorderThickness="1" BorderBrush="{StaticResource BorderBrush}"/>
                                <ScrollViewer>
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="ComboBoxItem">
        <Setter Property="Background" Value="{StaticResource PrimaryBackground}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryForeground}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Border"
                            Padding="2"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonHoverBackground}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonHoverBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
    </Style>
    
    <Style TargetType="ToolTip">
        <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryForeground}"/>
        <Setter Property="BorderThickness" Value="1"/>
    </Style>
    
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{StaticResource ButtonBackground}"
                            BorderBrush="{StaticResource BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="Border" Background="Transparent" CornerRadius="2">
                        <Path Fill="{StaticResource PrimaryForeground}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonHoverBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Width" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="12"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition MaxHeight="12"/>
                        </Grid.RowDefinitions>
                        <RepeatButton Grid.Row="0"
                                      Style="{StaticResource ScrollBarButton}"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      Content="M 0 4 L 3.5 0 L 7 4 Z"/>
                        <Track Grid.Row="1"
                               x:Name="PART_Track"
                               IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}"/>
                            </Track.Thumb>
                        </Track>
                        <RepeatButton Grid.Row="2"
                                      Style="{StaticResource ScrollBarButton}"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      Content="M 0 0 L 3.5 4 L 7 0 Z"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="ContextMenu">
        <Setter Property="Background" Value="{StaticResource SecondaryBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border Uid="Border_48" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer Uid="ScrollViewer_25" CanContentScroll="True" Style="{x:Null}" VerticalScrollBarVisibility="Auto">
                            <ItemsPresenter Uid="ItemsPresenter_10" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="BaseMenuItemStyle" TargetType="MenuItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
    <Border x:Name="Border" Background="{TemplateBinding Background}" Padding="2">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="25" SharedSizeGroup="Icon"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="Arrow"/>
            </Grid.ColumnDefinitions>

            <Rectangle x:Name="IconArea" Grid.Column="0" Fill="{StaticResource SecondaryBackground}"/>
            
            <Path x:Name="CheckMark" Grid.Column="0" Visibility="Collapsed" Width="10" Height="10" Data="M 0 5 L 3.5 8.5 L 8.5 0" Stroke="{TemplateBinding Foreground}" StrokeThickness="2" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            
            <ContentPresenter Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" Margin="8,3" VerticalAlignment="Center"/>
            <Path x:Name="Arrow" Grid.Column="2" Data="M 0 0 L 4 4 L 0 8 Z" Fill="{TemplateBinding Foreground}" VerticalAlignment="Center" Margin="8,0,5,0" Visibility="Collapsed"/>
            <Popup x:Name="PART_Popup" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" Focusable="False" AllowsTransparency="True">
                <Border BorderBrush="{StaticResource BorderBrush}" BorderThickness="1" Background="{StaticResource SecondaryBackground}">
                    <ItemsPresenter x:Name="PART_ItemsPresenter" Grid.IsSharedSizeScope="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                </Border>
            </Popup>
        </Grid>
    </Border>
    <ControlTemplate.Triggers>
        <Trigger Property="IsHighlighted" Value="True">
            <Setter Property="Background" Value="{DynamicResource ButtonHoverBackground}"/>
            <Setter TargetName="IconArea" Property="Fill" Value="{DynamicResource ButtonHoverBackground}"/>
        </Trigger>
        <Trigger Property="IsChecked" Value="True">
            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
        </Trigger>
        <Trigger Property="Role" Value="SubmenuHeader">
            <Setter TargetName="Arrow" Property="Visibility" Value="Visible"/>
        </Trigger>
    </ControlTemplate.Triggers>
</ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="MenuItem" BasedOn="{StaticResource BaseMenuItemStyle}" />
</ResourceDictionary>